[
    {
        "createdAt": "2025-07-07T11:39:49.436Z",
        "updatedAt": "2025-07-07T11:39:49.436Z",
        "id": "OiiEcpmpLa9Y0xoP",
        "name": "hardenize-free-report-browser-use",
        "active": false,
        "isArchived": false,
        "nodes": [
            {
                "parameters": {
                    "descriptionType": "manual",
                    "toolDescription": "Click on any element in the window",
                    "resource": "interaction",
                    "sessionId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Session_ID', \"The `sessionId` returned by the `Create session` tool\", 'string') }}",
                    "windowId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Window_ID', \"The `windowId` returned by the `Open window` tool\", 'string') }}",
                    "elementDescription": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Element_Description', `Describe in detail the element to click on, e.g. The menu item \"about us\" at the top of the page`, 'string') }}",
                    "additionalFields": {
                        "waitForNavigation": "load"
                    }
                },
                "id": "41a17964-e888-439d-9829-505823d7fba2",
                "name": "Click",
                "type": "n8n-nodes-base.airtopTool",
                "position": [
                    -240,
                    -300
                ],
                "typeVersion": 1,
                "credentials": {
                    "airtopApi": {
                        "id": "2rRTh7rOxCqOmaay",
                        "name": "Airtop account"
                    }
                }
            },
            {
                "parameters": {
                    "descriptionType": "manual",
                    "toolDescription": "Query the page, ask and extract information",
                    "resource": "extraction",
                    "operation": "query",
                    "sessionId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Session_ID', \"The `sessionId` returned by the `Create session` tool\", 'string') }}",
                    "windowId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Window_ID', \"The `windowId` returned by the `Open window` tool\", 'string') }}",
                    "prompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt', `Ask anything and request to extract information from the current page, e.g. \"Is there any sign-up form? yes or no\"`, 'string') }}",
                    "additionalFields": {}
                },
                "id": "2e5b2572-a373-48ad-88dd-7d70814133f8",
                "name": "Query",
                "type": "n8n-nodes-base.airtopTool",
                "position": [
                    -120,
                    -300
                ],
                "typeVersion": 1,
                "credentials": {
                    "airtopApi": {
                        "id": "2rRTh7rOxCqOmaay",
                        "name": "Airtop account"
                    }
                }
            },
            {
                "parameters": {
                    "descriptionType": "manual",
                    "toolDescription": "Load a URL into the browser window",
                    "resource": "window",
                    "operation": "load",
                    "sessionId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Session_ID', \"The `sessionId` returned by the `Create session` tool\", 'string') }}",
                    "windowId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Window_ID', \"The `windowId` returned by the `Open window` tool\", 'string') }}",
                    "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
                    "additionalFields": {}
                },
                "id": "0f04d86c-e356-40ad-aaed-bf049bd59f34",
                "name": "Load URL",
                "type": "n8n-nodes-base.airtopTool",
                "position": [
                    -20,
                    -300
                ],
                "typeVersion": 1,
                "credentials": {
                    "airtopApi": {
                        "id": "2rRTh7rOxCqOmaay",
                        "name": "Airtop account"
                    }
                }
            },
            {
                "parameters": {
                    "operation": "terminate",
                    "sessionId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Session_ID', \"The `sessionId` returned by the `Create session` tool\", 'string') }}"
                },
                "id": "36099ae6-ddb4-4aa4-a3ed-347e79cdf948",
                "name": "End session",
                "type": "n8n-nodes-base.airtopTool",
                "position": [
                    100,
                    -280
                ],
                "typeVersion": 1,
                "credentials": {
                    "airtopApi": {
                        "id": "2rRTh7rOxCqOmaay",
                        "name": "Airtop account"
                    }
                }
            },
            {
                "parameters": {
                    "descriptionType": "manual",
                    "toolDescription": "Type text into the page's element described",
                    "resource": "interaction",
                    "operation": "type",
                    "sessionId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Session_ID', \"The `sessionId` returned by the `Create session` tool\", 'string') }}",
                    "windowId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Window_ID', \"The `windowId` returned by the `Open window` tool\", 'string') }}",
                    "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}",
                    "pressEnterKey": true,
                    "elementDescription": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Element_Description', `Describe in detail the element to type into, e.g. The search box at the top of the page`, 'string') }}",
                    "additionalFields": {}
                },
                "id": "993bd7f2-a6f4-486e-8360-ea9af8422e6c",
                "name": "Type",
                "type": "n8n-nodes-base.airtopTool",
                "position": [
                    200,
                    -280
                ],
                "typeVersion": 1,
                "credentials": {
                    "airtopApi": {
                        "id": "2rRTh7rOxCqOmaay",
                        "name": "Airtop account"
                    }
                }
            },
            {
                "parameters": {
                    "name": "Start_Browser",
                    "description": "Start a new browser session and window",
                    "workflowId": {
                        "__rl": true,
                        "value": "yVJrBUyEy2GLt5Xx",
                        "mode": "list",
                        "cachedResultName": "external-posture-analysis"
                    },
                    "workflowInputs": {
                        "mappingMode": "defineBelow",
                        "value": {
                            "profile_name": "n8n-sb"
                        },
                        "matchingColumns": [],
                        "schema": [
                            {
                                "id": "url",
                                "displayName": "url",
                                "required": false,
                                "defaultMatch": false,
                                "display": true,
                                "canBeUsedToMatch": true,
                                "type": "string"
                            },
                            {
                                "id": "profile_name",
                                "displayName": "profile_name",
                                "required": false,
                                "defaultMatch": false,
                                "display": true,
                                "canBeUsedToMatch": true,
                                "type": "string"
                            }
                        ],
                        "attemptToConvertTypes": false,
                        "convertFieldsToString": false
                    }
                },
                "id": "3362db29-2d07-467c-9584-6b2b33c3e624",
                "name": "Start browser",
                "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
                "position": [
                    300,
                    -280
                ],
                "typeVersion": 2.1
            },
            {
                "parameters": {
                    "content": "## Note\nThis sub-workflow simplifies the session management for the agent",
                    "height": 300,
                    "width": 220,
                    "color": 5
                },
                "id": "8651ff53-8d95-494c-b8a3-dc671d01ef8b",
                "name": "Sticky Note1",
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -420,
                    240
                ],
                "typeVersion": 1
            },
            {
                "parameters": {
                    "schemaType": "manual",
                    "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"report_url\": {\n\t\t\t\"type\": \"string\",\n            \"description\": \"URL of the Hardenize report\"\n\t\t}\n\t}\n}"
                },
                "id": "c2746e91-a313-4858-a263-6bf7078dca9e",
                "name": "Structured Output Parser",
                "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
                "position": [
                    400,
                    -300
                ],
                "typeVersion": 1.2
            },
            {
                "parameters": {
                    "profileName": "={{ $json.profile_name }}",
                    "additionalFields": {}
                },
                "id": "82f97880-1c28-4a98-9c62-f7ec53bb1aa9",
                "name": "Session",
                "type": "n8n-nodes-base.airtop",
                "position": [
                    -120,
                    380
                ],
                "typeVersion": 1,
                "credentials": {
                    "airtopApi": {
                        "id": "2rRTh7rOxCqOmaay",
                        "name": "Airtop account"
                    }
                }
            },
            {
                "parameters": {
                    "resource": "window",
                    "url": "={{ $('Browser management sub-workflow').item.json.url }}",
                    "getLiveView": true,
                    "additionalFields": {}
                },
                "id": "a06df1d4-e040-40c2-8ce9-9af0e58f9db5",
                "name": "Window",
                "type": "n8n-nodes-base.airtop",
                "position": [
                    100,
                    380
                ],
                "typeVersion": 1,
                "credentials": {
                    "airtopApi": {
                        "id": "2rRTh7rOxCqOmaay",
                        "name": "Airtop account"
                    }
                }
            },
            {
                "parameters": {
                    "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### See the agent in action\nEnable this Slack node to receive the URL for the Live View in a message\n\n",
                    "height": 340,
                    "width": 220,
                    "color": 7
                },
                "id": "d15a56f1-9f60-40c8-8fe0-577938c46198",
                "name": "Sticky Note",
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -860,
                    300
                ],
                "typeVersion": 1
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "0a0680af-39bd-4bc7-b9cd-84c1766c79a1",
                                "name": "sessionId",
                                "type": "string",
                                "value": "={{ $('Session').item.json.sessionId }}"
                            },
                            {
                                "id": "13940ee8-c1d4-4718-a7b4-176c44c097b7",
                                "name": "windowId",
                                "type": "string",
                                "value": "={{ $('Window').item.json.data.windowId }}"
                            },
                            {
                                "id": "a0f2005c-2cd2-4a8d-891b-a4759b72a124",
                                "name": "output",
                                "type": "string",
                                "value": "Session and window created successfully"
                            }
                        ]
                    },
                    "options": {}
                },
                "id": "f0b10aa5-d71d-44a6-9afc-dd21bec71f49",
                "name": "Return IDs",
                "type": "n8n-nodes-base.set",
                "position": [
                    540,
                    380
                ],
                "typeVersion": 3.4
            },
            {
                "parameters": {
                    "workflowInputs": {
                        "values": [
                            {
                                "name": "url"
                            },
                            {
                                "name": "profile_name"
                            }
                        ]
                    }
                },
                "id": "53e43016-c7e7-4bcd-a24a-b2a1dc352e20",
                "name": "Browser management sub-workflow",
                "type": "n8n-nodes-base.executeWorkflowTrigger",
                "position": [
                    -360,
                    380
                ],
                "typeVersion": 1.1
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "e1d6ab7c-2f45-44fd-9457-bb3046fad4c5",
                                "name": "report_url",
                                "type": "string",
                                "value": "={{ $json.output.report_url }}"
                            }
                        ]
                    },
                    "options": {}
                },
                "id": "039736cb-8eac-481d-8120-9db9e20381a1",
                "name": "Hardenize report URL",
                "type": "n8n-nodes-base.set",
                "position": [
                    260,
                    -620
                ],
                "typeVersion": 3.4
            },
            {
                "parameters": {
                    "url": "={{ $json.report_url }}",
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    1500,
                    -360
                ],
                "id": "8f0cde53-797f-4e1a-b19a-9410f06cd732",
                "name": "GET Hardenize report"
            },
            {
                "parameters": {
                    "promptType": "define",
                    "text": "=- You are experienced cybersecurity expert. \n- Extract this Hardenize report cybersecurity findings about the analysed domain\n\nHardenize report: {{ $json.reportContainer }}",
                    "batching": {}
                },
                "type": "@n8n/n8n-nodes-langchain.chainLlm",
                "typeVersion": 1.7,
                "position": [
                    2300,
                    -380
                ],
                "id": "9757c0db-68a6-477a-bf7e-cba7a250e46f",
                "name": "Summarize Hardenize"
            },
            {
                "parameters": {
                    "jsCode": "/**\n * n8n Code node – “Run once for all items”\n * Adds: json.isEmpty  →  true  if pageHeader OR reportContainer is empty\n */\n\n// -------- helper: escape a class name for RegExp --------------\nfunction esc(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\n// -------- helper: balanced-DIV extractor ----------------------\nfunction extractDivWithClasses(html, classes) {\n  const clsTokens = classes.trim().split(/\\s+/).map(esc);\n  const openTagRx = new RegExp(\n    `<div[^>]*class=\"[^\"]*${clsTokens.map(c => `\\\\b${c}\\\\b`).join('[^\"]*')}[^\"]*\"[^>]*>`,\n    'i',\n  );\n\n  const openTagMatch = openTagRx.exec(html);\n  if (!openTagMatch) return '';            // not found\n\n  const start = openTagMatch.index;\n  let idx   = start + openTagMatch[0].length;\n  let depth = 1;                            // one opening <div>\n\n  while (depth > 0 && idx < html.length) {\n    const nextOpen  = html.indexOf('<div',   idx);\n    const nextClose = html.indexOf('</div>', idx);\n    if (nextClose === -1) break;            // malformed HTML\n\n    if (nextOpen !== -1 && nextOpen < nextClose) {\n      depth++;                              // nested opening\n      idx = nextOpen + 4;\n    } else {\n      depth--;                              // closing </div>\n      idx = nextClose + 6;\n    }\n  }\n  return html.slice(start, idx);\n}\n\n// -------------------- main mapping ----------------------------\nreturn $input.all().map(item => {\n  const raw = item.json.data || '';\n\n  const pageHeader      = extractDivWithClasses(raw, 'pageHeader clearfix').trim();\n  const reportContainer = extractDivWithClasses(raw, 'reportContainer clearfix').trim();\n\n  /* An empty string is “falsy” in JavaScript, so:\n     !pageHeader || !reportContainer  → true if either is empty                        */\n  const isEmpty = !pageHeader || !reportContainer;\n\n  return {\n    json: {\n      pageHeader,\n      reportContainer,\n      isEmpty,\n    },\n  };\n});\n"
                },
                "type": "n8n-nodes-base.code",
                "typeVersion": 2,
                "position": [
                    1800,
                    -360
                ],
                "id": "0106a6a6-aa53-4ed8-8353-aa2586c5035f",
                "name": "Code"
            },
            {
                "parameters": {
                    "modelName": "models/gemini-2.0-flash-lite",
                    "options": {}
                },
                "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
                "typeVersion": 1,
                "position": [
                    2280,
                    -220
                ],
                "id": "0a564c4f-946d-4022-a22f-5cde2a90c3ba",
                "name": "Google Gemini Chat Model1",
                "credentials": {
                    "googlePalmApi": {
                        "id": "5uGtHfwswgZzlxI8",
                        "name": "Google Gemini(PaLM) Api account 2"
                    }
                }
            },
            {
                "parameters": {
                    "content": "# Hardenize analyse report\nworking with already created report",
                    "height": 420,
                    "width": 1660
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    1100,
                    -520
                ],
                "typeVersion": 1,
                "id": "96d3bf63-e6f4-4aa5-8295-7cf091284b31",
                "name": "Sticky Note4"
            },
            {
                "parameters": {
                    "content": "# Hardenize create report",
                    "height": 740,
                    "width": 1760
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -920,
                    -860
                ],
                "typeVersion": 1,
                "id": "251e7abd-62f3-470d-938b-796e803656b9",
                "name": "Sticky Note5"
            },
            {
                "parameters": {
                    "content": "# Hardenize create report (helper workflow)",
                    "height": 740,
                    "width": 1760
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -920,
                    -60
                ],
                "typeVersion": 1,
                "id": "ac4ecfb4-0e31-46f2-ac13-f41b8813bb37",
                "name": "Sticky Note6"
            },
            {
                "parameters": {
                    "modelName": "models/gemini-2.5-flash",
                    "options": {}
                },
                "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
                "typeVersion": 1,
                "position": [
                    -360,
                    -320
                ],
                "id": "2556d325-d750-48fc-9012-5f49e8004dcb",
                "name": "Google Gemini Chat Model5",
                "credentials": {
                    "googlePalmApi": {
                        "id": "5uGtHfwswgZzlxI8",
                        "name": "Google Gemini(PaLM) Api account 2"
                    }
                }
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "709d8f6b-971c-4b3c-8443-a1d236e611e7",
                                "leftValue": "={{ $json.report_url }}",
                                "rightValue": "",
                                "operator": {
                                    "type": "string",
                                    "operation": "notExists",
                                    "singleValue": true
                                }
                            },
                            {
                                "id": "1e9b8b26-8dd5-4b8d-b290-e7f654142e2f",
                                "leftValue": "={{ $json.report_url }}",
                                "rightValue": "",
                                "operator": {
                                    "type": "string",
                                    "operation": "empty",
                                    "singleValue": true
                                }
                            }
                        ],
                        "combinator": "or"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    480,
                    -620
                ],
                "id": "7bc84112-b6a4-4b69-9e82-7953a7e92227",
                "name": "Is report_url empty?"
            },
            {
                "parameters": {
                    "select": "channel",
                    "channelId": {
                        "__rl": true,
                        "value": "C091LTK9BDG",
                        "mode": "list",
                        "cachedResultName": "hardenize-report"
                    },
                    "text": "={{ $json.report_url }}",
                    "otherOptions": {}
                },
                "id": "05c816ca-59b2-42d3-bf24-689f64a449bf",
                "name": "Send report_url to Slack",
                "type": "n8n-nodes-base.slack",
                "position": [
                    640,
                    -320
                ],
                "webhookId": "72d47d9c-6860-4248-8e83-7790264fdaf2",
                "typeVersion": 2.3,
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                }
            },
            {
                "parameters": {
                    "mode": "combine",
                    "combineBy": "combineByPosition",
                    "options": {}
                },
                "type": "n8n-nodes-base.merge",
                "typeVersion": 3.2,
                "position": [
                    1020,
                    -740
                ],
                "id": "dc124ecf-6776-46c0-a9dc-a8ff623ab61c",
                "name": "Empty report_url merge"
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "6e1ff24c-032c-423b-8b6b-ac156fed5bce",
                                "leftValue": "={{ $json.isEmpty }}",
                                "rightValue": "",
                                "operator": {
                                    "type": "boolean",
                                    "operation": "false",
                                    "singleValue": true
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    2020,
                    -360
                ],
                "id": "fb8cf987-f109-48ad-b795-112ff7ed7f69",
                "name": "Does report_url contain the report?"
            },
            {
                "parameters": {
                    "mode": "combine",
                    "combineBy": "combineByPosition",
                    "options": {}
                },
                "type": "n8n-nodes-base.merge",
                "typeVersion": 3.2,
                "position": [
                    -580,
                    -400
                ],
                "id": "10bc22c2-e46c-4132-9df6-99296274ce62",
                "name": "Create report merge",
                "alwaysOutputData": false
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "b96c6087-25ef-41da-9898-a0804ec26a40",
                                "name": "report_url",
                                "value": "=https://www.hardenize.com/report/{{ $('Sanitize domain').item.json.domain }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    1240,
                    -800
                ],
                "id": "12c27ede-148e-4dd7-a137-d2b5566c0557",
                "name": "Guess report URL"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "b96c6087-25ef-41da-9898-a0804ec26a40",
                                "name": "output",
                                "value": "={\"report_url\":\"https://www.hardenize.com/report/{{ $json.domain }}\"}",
                                "type": "object"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -80,
                    -620
                ],
                "id": "a6c6c235-4730-4fb1-8ed7-614d37588317",
                "name": "Guess report URL1"
            },
            {
                "parameters": {
                    "promptType": "define",
                    "text": "=Domain: {{ $('Sanitize domain').item.json.domain }}",
                    "hasOutputParser": true,
                    "options": {
                        "systemMessage": "=# Agent goal\n- You are a smart, advanced web agent connected with tools that allow you to manage a remote web browser.\n- Your goal is to deliver Hardenize report URL to the user.\n- You will deliver the report for the domain specified by user.\n- You accomplish the goal by controlling web browser using tools.\n\n# Steps to get Hardenize report URL\n1. Go to https://www.hardenize.com/ \n2. Locate input field with label 'Try our public report against your domain name: this HTML element ID is testURL \n3. Enter the user specified domain into this input field.\n4. Click the RUN orange button. \n5. Wait until you are redirected to the report. \n6. Return the report url.\n\n# Tools\n\n## Start the browser\nYou should always start by using the `Start browser` tool to get the `sessionId` and `windowId` required by other tools.\n\n## Use the `Query` tool\nYou don't have access to the browser screen but you can call the `Query` tool to get knowladge and hints of the current browser window. This tool accepts queries in natural language and can output information in plain text, markdown or JSON.\n\n## Use the `Click` tool\nUse the `Click` tool to click on an element on the web page. Describe the element in details in the \"Element Description\" field, Be specific and refer to elements that are on the page. \n\n## Use the `Type` tool\nUse the `Type` tool to type in text boxes. Describe the text box in \"Element Description\" field and the text to type in the \"Text\" field. The 'Type' tool is clicking Enter after typing the text so don't send [ENTER] commandes.\n\n### Examples for how to use the `Query` tool\n- Ask something about the current page:\n  \"Is the user logged in? Answer with Yes or No\"\n- Retrieve information:\n  \"Extract all the posts in the page, include the title and copy, output in JSON format\"\n- Get hints on the UI:\n  \"Is there a link to the contact form? If yes, describe the element in detail\"\n\n\n# Important\n- Start by calling `Start browser` to begin using the browser and provide the initial URL\n- Use the `Start browser` tool only once. \n- The human ONLY sees your last message\n- Make sure to include the Hardenize report URL in your LAST message\n- Call `End session` with the `sessionId` once you have finished using the browser\n- You are allowed to visit ONLY hardenize.com website.",
                        "maxIterations": 20,
                        "returnIntermediateSteps": false,
                        "passthroughBinaryImages": true
                    }
                },
                "id": "a4e02bf7-9181-4444-b2e0-d64ed37154f4",
                "name": "AI Agent",
                "type": "@n8n/n8n-nodes-langchain.agent",
                "position": [
                    -140,
                    -480
                ],
                "retryOnFail": true,
                "typeVersion": 1.8,
                "waitBetweenTries": 5000
            },
            {
                "parameters": {
                    "select": "channel",
                    "channelId": {
                        "__rl": true,
                        "value": "C091LTK9BDG",
                        "mode": "list",
                        "cachedResultName": "hardenize-report"
                    },
                    "text": "={{ $json.data.liveViewUrl }}",
                    "otherOptions": {}
                },
                "id": "97b6af5f-dd59-471d-b752-70d0cb8d06e6",
                "name": "Send a message",
                "type": "n8n-nodes-base.slack",
                "position": [
                    340,
                    380
                ],
                "webhookId": "72d47d9c-6860-4248-8e83-7790264fdaf2",
                "typeVersion": 2.3,
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                }
            }
        ],
        "connections": {
            "Click": {
                "ai_tool": [
                    [
                        {
                            "node": "AI Agent",
                            "type": "ai_tool",
                            "index": 0
                        }
                    ]
                ]
            },
            "Query": {
                "ai_tool": [
                    [
                        {
                            "node": "AI Agent",
                            "type": "ai_tool",
                            "index": 0
                        }
                    ]
                ]
            },
            "Load URL": {
                "ai_tool": [
                    [
                        {
                            "node": "AI Agent",
                            "type": "ai_tool",
                            "index": 0
                        }
                    ]
                ]
            },
            "End session": {
                "ai_tool": [
                    [
                        {
                            "node": "AI Agent",
                            "type": "ai_tool",
                            "index": 0
                        }
                    ]
                ]
            },
            "Type": {
                "ai_tool": [
                    [
                        {
                            "node": "AI Agent",
                            "type": "ai_tool",
                            "index": 0
                        }
                    ]
                ]
            },
            "Start browser": {
                "ai_tool": [
                    [
                        {
                            "node": "AI Agent",
                            "type": "ai_tool",
                            "index": 0
                        }
                    ]
                ]
            },
            "Structured Output Parser": {
                "ai_outputParser": [
                    [
                        {
                            "node": "AI Agent",
                            "type": "ai_outputParser",
                            "index": 0
                        }
                    ]
                ]
            },
            "Session": {
                "main": [
                    [
                        {
                            "node": "Window",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Window": {
                "main": [
                    [
                        {
                            "node": "Send a message",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Browser management sub-workflow": {
                "main": [
                    [
                        {
                            "node": "Session",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Hardenize report URL": {
                "main": [
                    [
                        {
                            "node": "Is report_url empty?",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "GET Hardenize report": {
                "main": [
                    [
                        {
                            "node": "Code",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Code": {
                "main": [
                    [
                        {
                            "node": "Does report_url contain the report?",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Google Gemini Chat Model1": {
                "ai_languageModel": [
                    [
                        {
                            "node": "Summarize Hardenize",
                            "type": "ai_languageModel",
                            "index": 0
                        }
                    ]
                ]
            },
            "Google Gemini Chat Model5": {
                "ai_languageModel": [
                    [
                        {
                            "node": "AI Agent",
                            "type": "ai_languageModel",
                            "index": 0
                        }
                    ]
                ]
            },
            "Is report_url empty?": {
                "main": [
                    [
                        {
                            "node": "Empty report_url merge",
                            "type": "main",
                            "index": 1
                        }
                    ],
                    [
                        {
                            "node": "GET Hardenize report",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Send report_url to Slack",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Empty report_url merge": {
                "main": [
                    [
                        {
                            "node": "Guess report URL",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Does report_url contain the report?": {
                "main": [
                    [
                        {
                            "node": "Summarize Hardenize",
                            "type": "main",
                            "index": 0
                        }
                    ],
                    [
                        {
                            "node": "Create report merge",
                            "type": "main",
                            "index": 1
                        }
                    ]
                ]
            },
            "Create report merge": {
                "main": [
                    [
                        {
                            "node": "AI Agent",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Guess report URL": {
                "main": [
                    [
                        {
                            "node": "GET Hardenize report",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Guess report URL1": {
                "main": [
                    [
                        {
                            "node": "Hardenize report URL",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "AI Agent": {
                "main": [
                    [
                        {
                            "node": "Hardenize report URL",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Send a message": {
                "main": [
                    [
                        {
                            "node": "Return IDs",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            }
        },
        "settings": {
            "executionOrder": "v1"
        },
        "staticData": null,
        "meta": null,
        "pinData": {},
        "versionId": "03f0c064-04b6-4ea7-9056-e09ba5f83b6a",
        "triggerCount": 0,
        "tags": []
    },
    {
        "createdAt": "2025-07-10T13:33:17.297Z",
        "updatedAt": "2025-07-10T14:24:30.000Z",
        "id": "R0Nv2CHVKaXZNBy3",
        "name": "backup-all-workflows",
        "active": false,
        "isArchived": false,
        "nodes": [
            {
                "parameters": {},
                "id": "9062e178-444a-4300-92e7-8cb496deaed2",
                "name": "On clicking 'execute'",
                "type": "n8n-nodes-base.manualTrigger",
                "position": [
                    -140,
                    -280
                ],
                "typeVersion": 1
            },
            {
                "parameters": {
                    "filters": {},
                    "requestOptions": {}
                },
                "id": "4daa173d-d230-4517-86f2-775cefb84219",
                "name": "n8n",
                "type": "n8n-nodes-base.n8n",
                "position": [
                    320,
                    -180
                ],
                "typeVersion": 1,
                "credentials": {
                    "n8nApi": {
                        "id": "LpNiC77YpyD3XREl",
                        "name": "n8n backup account"
                    }
                }
            },
            {
                "parameters": {
                    "rule": {
                        "interval": [
                            {
                                "triggerAtHour": 1,
                                "triggerAtMinute": 33
                            }
                        ]
                    }
                },
                "id": "1ccd9ba7-189d-4b0c-bd86-f210087f5d36",
                "name": "Schedule Trigger",
                "type": "n8n-nodes-base.scheduleTrigger",
                "position": [
                    -140,
                    -80
                ],
                "typeVersion": 1.2
            },
            {
                "parameters": {
                    "content": "## Backup to NAS2 share\n \nThis workflow will backup all instance workflows to NAS2 every 24 hours.\n\n",
                    "height": 417,
                    "width": 385,
                    "color": 4
                },
                "id": "d274418f-aafc-4c65-a6ed-41c59f023648",
                "name": "Sticky Note1",
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -620,
                    -360
                ],
                "typeVersion": 1
            },
            {
                "parameters": {
                    "content": "## Main workflow loop",
                    "height": 416.1856906618075,
                    "width": 1272.6408145680155,
                    "color": 7
                },
                "id": "2b13257a-70a6-4bcf-926b-a64289b99f54",
                "name": "Sticky Note2",
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -180,
                    -360
                ],
                "typeVersion": 1
            },
            {
                "parameters": {
                    "select": "channel",
                    "channelId": {
                        "__rl": true,
                        "value": "C0953UE3Q30",
                        "mode": "list",
                        "cachedResultName": "n8n-vlad-backup"
                    },
                    "text": "=[backup workflow]: \nStarting Workflow Backup [\n(execution id): {{ $execution.id }}]\n(start time): {{ $now.format(\"yyyy-MM-dd hh:mm:ss\") }}",
                    "otherOptions": {
                        "includeLinkToWorkflow": false
                    }
                },
                "id": "842cfdbf-c3c5-4def-bb58-f0d4babeb68f",
                "name": "Starting Message",
                "type": "n8n-nodes-base.slack",
                "position": [
                    100,
                    -180
                ],
                "webhookId": "c02eb407-5547-4aa0-9ebf-46dab67b63b6",
                "typeVersion": 2.2,
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                }
            },
            {
                "parameters": {
                    "select": "channel",
                    "channelId": {
                        "__rl": true,
                        "value": "C0953UE3Q30",
                        "mode": "list",
                        "cachedResultName": "n8n-vlad-backup"
                    },
                    "text": "=[backup workflow]:\nBackup has completed\n(workflows processed): {{ $('n8n').all().length }}\n(end time): {{ $now.format(\"yyyy-MM-dd hh:mm:ss\") }}",
                    "otherOptions": {}
                },
                "id": "e0db98e4-0199-4088-94b9-c9748c565af4",
                "name": "Completed Notification1",
                "type": "n8n-nodes-base.slack",
                "position": [
                    940,
                    -320
                ],
                "webhookId": "a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4",
                "executeOnce": true,
                "typeVersion": 2.2,
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                }
            },
            {
                "parameters": {
                    "operation": "write",
                    "fileName": "=/data/n8n/workflow-backup/all_{{$now.format('yyyy-MM-dd')}}.json",
                    "options": {}
                },
                "type": "n8n-nodes-base.readWriteFile",
                "typeVersion": 1,
                "position": [
                    720,
                    -180
                ],
                "id": "589179ff-58d5-4fa5-9380-bfec4b026503",
                "name": "Save all workflows",
                "onError": "continueErrorOutput"
            },
            {
                "parameters": {
                    "operation": "toJson",
                    "options": {}
                },
                "type": "n8n-nodes-base.convertToFile",
                "typeVersion": 1.1,
                "position": [
                    540,
                    -180
                ],
                "id": "f1dfddd3-f509-4ffa-9f37-121edcdeb486",
                "name": "Convert to File"
            },
            {
                "parameters": {
                    "select": "channel",
                    "channelId": {
                        "__rl": true,
                        "value": "C0953UE3Q30",
                        "mode": "list",
                        "cachedResultName": "n8n-vlad-backup"
                    },
                    "text": "=[backup workflow]:\n(failed backup) {{ $json.error }}",
                    "otherOptions": {
                        "includeLinkToWorkflow": false
                    }
                },
                "id": "d291c0b7-5f29-4d36-8760-6f6faca97e62",
                "name": "Failed JSON save",
                "type": "n8n-nodes-base.slack",
                "position": [
                    940,
                    -120
                ],
                "webhookId": "2a092edb-de12-490f-931b-34d70e7d7696",
                "typeVersion": 2.2,
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                }
            }
        ],
        "connections": {
            "n8n": {
                "main": [
                    [
                        {
                            "node": "Convert to File",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Schedule Trigger": {
                "main": [
                    [
                        {
                            "node": "Starting Message",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Starting Message": {
                "main": [
                    [
                        {
                            "node": "n8n",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "On clicking 'execute'": {
                "main": [
                    [
                        {
                            "node": "Starting Message",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Save all workflows": {
                "main": [
                    [
                        {
                            "node": "Completed Notification1",
                            "type": "main",
                            "index": 0
                        }
                    ],
                    [
                        {
                            "node": "Failed JSON save",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Convert to File": {
                "main": [
                    [
                        {
                            "node": "Save all workflows",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Failed JSON save": {
                "main": [
                    []
                ]
            }
        },
        "settings": {
            "executionOrder": "v1"
        },
        "staticData": null,
        "meta": {
            "templateCredsSetupCompleted": true
        },
        "pinData": {},
        "versionId": "18d0c31d-d954-4277-bf45-df62eefa0cb9",
        "triggerCount": 0,
        "tags": []
    },
    {
        "createdAt": "2025-06-30T08:10:24.946Z",
        "updatedAt": "2025-07-10T14:18:47.000Z",
        "id": "W8TD4nUtB8wlnqzW",
        "name": "external-posture",
        "active": false,
        "isArchived": false,
        "nodes": [
            {
                "parameters": {
                    "content": "# Prerequisites\n\n1. AirTop.ai API key\n2. Google Gemini API key\n3. Slack connection\n4. Box connection \n5. APILAyer API key \n6. Shodan API key \n7. FlashDocs API key",
                    "height": 280,
                    "width": 520,
                    "color": 7
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -9120,
                    3312
                ],
                "typeVersion": 1,
                "id": "9276fdea-1b71-4149-a200-5a2da3963109",
                "name": "Sticky Note12"
            },
            {
                "parameters": {
                    "content": "# Dependencies\n\n1. Hardenize (domain analysis)\n2. Shodan (vulnerability analysis)\n3. APILAyer (whois lookup)\n4. Globalping.io (dns records fetch)\n5. SlidesGPT / FlashDocs / SlideSpeak (slides production)\n6. AirTop.ai  (browser use)\n7. Google Gemini  (AI model)\n8. Slack  (main control point, debug messages)\n9. Box (storage)\n\n\n\n\n",
                    "height": 340,
                    "width": 520,
                    "color": 7
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -9120,
                    2928
                ],
                "typeVersion": 1,
                "id": "6eabd89f-2473-464b-8beb-0a0299691d23",
                "name": "Sticky Note13"
            },
            {
                "parameters": {
                    "trigger": [
                        "app_mention"
                    ],
                    "channelId": {
                        "__rl": true,
                        "value": "C091L66NL78",
                        "mode": "list",
                        "cachedResultName": "security-slides-production"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.slackTrigger",
                "typeVersion": 1,
                "position": [
                    -8080,
                    3712
                ],
                "id": "c40a25bb-6e82-4470-a3fc-0485c0082e5c",
                "name": "Slack Trigger",
                "webhookId": "d849b2c3-5640-41ce-a922-b1b855cc96fd",
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                }
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "ac63812f-5ed4-48cc-8723-ae9af364defa",
                                "name": "domain",
                                "value": "={{($json.text.match(/<https?:\\/\\/[^|>]+\\|([^>]+)>/) || [])[1]}}\n",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -7840,
                    3712
                ],
                "id": "9023665d-6d3b-421f-88d3-d2d7c9bd856c",
                "name": "Get Domain"
            },
            {
                "parameters": {},
                "type": "n8n-nodes-base.manualTrigger",
                "typeVersion": 1,
                "position": [
                    -8080,
                    3264
                ],
                "id": "8fb77378-7321-43ba-a97f-755fb6481652",
                "name": "When clicking ‘Execute workflow’"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "d19d6b89-f09d-44bd-8327-378d33eb923a",
                                "name": "shodan_report",
                                "value": "={{ $json.prompt }}",
                                "type": "object"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -3120,
                    1120
                ],
                "id": "36805fcf-4070-41f6-bb1e-4d40fea50596",
                "name": "Shodan Output parse"
            },
            {
                "parameters": {
                    "modelName": "models/gemini-2.0-flash-lite",
                    "options": {}
                },
                "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
                "typeVersion": 1,
                "position": [
                    -2544,
                    1424
                ],
                "id": "87bc861e-fb5a-4bb3-bf1e-fcdc85c77a69",
                "name": "Google Gemini Chat Model",
                "credentials": {
                    "googlePalmApi": {
                        "id": "5uGtHfwswgZzlxI8",
                        "name": "Google Gemini(PaLM) Api account 2"
                    }
                }
            },
            {
                "parameters": {
                    "jsCode": "// Loop over every incoming item\nfor (const item of $input.all()) {\n\n  // Safety-check in case matches is missing or not an array\n  if (Array.isArray(item.json.matches)) {\n\n    // Loop over every match object in the array\n    for (const match of item.json.matches) {\n\n      // Strip heavy/unused fields\n      if (match?.http) {\n        match.http.html = \"\";\n        if (match.http.favicon) match.http.favicon.data = \"\";\n      }\n      if (match?.ssl) match.ssl.chain = [];\n    }\n  }\n\n  /* ---------- NEW LINE: create a plain-text copy for the LLM ---------- */\n  item.json.prompt = JSON.stringify(item.json);          // compact (one line)\n  // Or prettier: JSON.stringify(item.json, null, 2);\n}\n\n// Return the cleaned items to the next node\nreturn $input.all();\n"
                },
                "type": "n8n-nodes-base.code",
                "typeVersion": 2,
                "position": [
                    -5600,
                    4320
                ],
                "id": "d726853d-863e-49f3-840f-72014c703de8",
                "name": "Remove unnecessary fields"
            },
            {
                "parameters": {
                    "promptType": "define",
                    "text": "=- You are experienced cybersecurity expert.\n- Your goal is to summarize Shodan cybersecurity report.\n- If there is no Shodan report provided, return \"Shodan report has not been provided\".\n- If the Shodan report is empty, return \"Shodan report is empty\".\n\nShodan report:\n{{ $json.prompt }}\n\n",
                    "batching": {}
                },
                "type": "@n8n/n8n-nodes-langchain.chainLlm",
                "typeVersion": 1.7,
                "position": [
                    -5088,
                    4240
                ],
                "id": "10b0ef22-a817-4da3-a7d4-592e9926566d",
                "name": "Summarize Shodan"
            },
            {
                "parameters": {
                    "promptType": "define",
                    "text": "=- You are experienced cybersecurity expert. \n- Extract this Hardenize report's cybersecurity findings about the analysed domain\n- You MUST include all findings from the provided report\n\nHardenize report: {{ $json.reportCard.toJsonString() }}",
                    "batching": {}
                },
                "type": "@n8n/n8n-nodes-langchain.chainLlm",
                "typeVersion": 1.7,
                "position": [
                    -4944,
                    4752
                ],
                "id": "363f263d-78a2-4d03-a2eb-8a641ae4cd84",
                "name": "Summarize Hardenize"
            },
            {
                "parameters": {
                    "modelName": "models/gemini-2.0-flash-lite",
                    "options": {}
                },
                "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
                "typeVersion": 1,
                "position": [
                    -4848,
                    4912
                ],
                "id": "af158ef7-742e-4abc-8d16-a008a056d067",
                "name": "Google Gemini Chat Model1",
                "credentials": {
                    "googlePalmApi": {
                        "id": "5uGtHfwswgZzlxI8",
                        "name": "Google Gemini(PaLM) Api account 2"
                    }
                }
            },
            {
                "parameters": {
                    "promptType": "define",
                    "text": "=# Goal\n- Your are experienced cybersecurity expert and slides content writer.\n- Produce a content for a presentation about cybersecurity posture of a selected company. \n- Produce content for slides based on the provided Shodan and Hardenize, VirusTotal reports, subdomain list and Connected providers information\n- Target audience is C-level executives and IT managers. \n- Your output should be in a markdown format. \n- Make sure it is easy to produce slides from your output.\n- Use ONLY British english for the content.\n\n# Slides structure\n- The first slide states the title \"Domain cybersecurity posture\", name of the anlaysed domain and date of the analysis {{ $now.format('yyyy-MM-dd') }} (this is in 'yyyy-MM-dd' format)\n- The second slide's title is \"Executive summary\" and contains the executive summary in whole sentences based on the findings from source reports.\n- The third slide is executive summary but in bullet points.\n- Next slides presents the findings.\n- The second to last slide is the plan for next steps.\n- The last slide contains closing remarks in a sense \"Cybersecurity is not one-shot thing, but rather continuos activity\" \"\n\n\n## Second slide's executive summary\n- One paragraph of the executive summary is about connected providers mentioning they have impact on the domains security posture.\n- Contains traffic light rank - GREEN or AMBER or RED - based on the findings.\n\n## Findings\n- Each finding will have assigned a severity from range 1-5 where 1 is INFO, 2 is LOW, 3 is MEDIUM, 4 is HIGH, 5 is critical.\n- When evaluating the severity you MUST respect the expert knowledge base provided below.\n\n### Expert knowledge base\n\nDMARC knowledge:\n- DMARC issues are more severe than missing MTA-STS and CAA.\n- If DMARC is set, but the action is quarantine, it is less severe than if the action is not set at all.\n\nFindings severity assignment\n- Old software and vulnerabilities are severity 5.\n- Missing SPF is severity 4.\n- Missing/misconfigured DMARC is severity 3.\n\n \n# Source reports\nShodan report:\n{{ $node['Merge sub-reports'].json.shodan_report }}\n\nHardenize report:\n{{ $node['Merge sub-reports'].json.hardenize_report }}\n\nVirusTotal report:\n{{ $node['Merge sub-reports'].json.virustotal_analysis }}\n\nConnected providers:\n{{ $node['Merge sub-reports'].json.connected_providers_text }}\n\nSubdomain list:\n{{ $node['Merge sub-reports'].json.subdomains }}\n",
                    "batching": {}
                },
                "type": "@n8n/n8n-nodes-langchain.chainLlm",
                "typeVersion": 1.7,
                "position": [
                    -2080,
                    3632
                ],
                "id": "bf0fe5df-afb7-47c3-86da-0ca3f1675d60",
                "name": "Slides content production1"
            },
            {
                "parameters": {
                    "modelName": "models/gemini-2.0-flash-lite",
                    "options": {}
                },
                "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
                "typeVersion": 1,
                "position": [
                    -5168,
                    4384
                ],
                "id": "79d36e3b-de20-431c-8b88-b329e58fa63f",
                "name": "Google Gemini Chat Model2",
                "credentials": {
                    "googlePalmApi": {
                        "id": "5uGtHfwswgZzlxI8",
                        "name": "Google Gemini(PaLM) Api account 2"
                    }
                }
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "b9a6c90f-93b2-4209-9527-57aee4b60e52",
                                "name": "hardenize_report",
                                "value": "={{ $json.text }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -3344,
                    4480
                ],
                "id": "77a412e9-f116-424b-99e7-8a58087189a5",
                "name": "Edit Fields1"
            },
            {
                "parameters": {
                    "promptType": "define",
                    "text": "=# Goal\n- Your are experience slides content writer. \n- Produce a content for a presentation about cybersecurity posture of a selected company. \n- Produce content for slides based on the provided Shodan and Hardenize reports\n- Target audience is C-level executives and IT managers. \n- Your output should be in a markdown format. \n- Make sure it is easy to produce slides from your output. \n- Your output is basically a text for a speaker presenting the slides. \n\n# Source reports\nShodan report:\n{{ $json.shodan_report }}\n\nHardenize report:\n{{ $json.hardenize_report }}",
                    "batching": {}
                },
                "type": "@n8n/n8n-nodes-langchain.chainLlm",
                "typeVersion": 1.7,
                "position": [
                    -2576,
                    1232
                ],
                "id": "12d1846c-a23b-4651-a3be-86b82b6f9b1c",
                "name": "Slides content production"
            },
            {
                "parameters": {},
                "type": "n8n-nodes-base.merge",
                "typeVersion": 3.2,
                "position": [
                    -2800,
                    1232
                ],
                "id": "e1c0b607-4e0b-4009-8557-c5cc3d88046d",
                "name": "Merge1"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "d19d6b89-f09d-44bd-8327-378d33eb923a",
                                "name": "hardenize_report",
                                "value": "={{ $json.reportContainer }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -3120,
                    1344
                ],
                "id": "3e6a9ce0-f26c-4f6b-b8eb-8af27df5a4ad",
                "name": "Hardenize Output parse1"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "ac63812f-5ed4-48cc-8723-ae9af364defa",
                                "name": "domain",
                                "value": "=domain.com",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -6688,
                    3408
                ],
                "id": "c62911ff-f113-4891-8631-d9569c1bf374",
                "name": "Set domain"
            },
            {
                "parameters": {
                    "method": "POST",
                    "url": "https://api.globalping.io/v1/measurements",
                    "sendHeaders": true,
                    "headerParameters": {
                        "parameters": [
                            {
                                "name": "accept",
                                "value": "application/json"
                            },
                            {
                                "name": "content-type",
                                "value": "application/json"
                            }
                        ]
                    },
                    "sendBody": true,
                    "specifyBody": "json",
                    "jsonBody": "={\"type\":\"dns\",\"target\":\"{{$json.domain.replaceAll('\\n','')}}\",\"measurementOptions\":{\"query\": { \"type\": \"MX\"}},\"locations\":[{\"country\":\"DE\"},{\"country\":\"PL\"}]}",
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -5936,
                    3552
                ],
                "id": "c3bdca79-d108-4247-8ec1-1d0adf7637b3",
                "name": "DNS: get MX probe"
            },
            {
                "parameters": {
                    "url": "=https://api.apilayer.com/whois/query?domain={{$json.domain}}",
                    "authentication": "genericCredentialType",
                    "genericAuthType": "httpHeaderAuth",
                    "sendHeaders": true,
                    "headerParameters": {
                        "parameters": [
                            {}
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -5728,
                    3952
                ],
                "id": "d6c78709-3c17-47c6-852b-e64d8cd136db",
                "name": "Get DNS Registrar&Hosting (WHOIS)",
                "credentials": {
                    "httpHeaderAuth": {
                        "id": "cJU6f32kd7w3280q",
                        "name": "API LAyer"
                    }
                }
            },
            {
                "parameters": {
                    "method": "POST",
                    "url": "https://api.globalping.io/v1/measurements",
                    "sendHeaders": true,
                    "headerParameters": {
                        "parameters": [
                            {
                                "name": "accept",
                                "value": "application/json"
                            },
                            {
                                "name": "content-type",
                                "value": "application/json"
                            }
                        ]
                    },
                    "sendBody": true,
                    "specifyBody": "json",
                    "jsonBody": "={\"type\":\"dns\",\"target\":\"{{$json.domain.replaceAll('\\n','')}}\",\"measurementOptions\":{\"query\": { \"type\": \"TXT\"}},\"locations\":[{\"country\":\"DE\"},{\"country\":\"PL\"}]}",
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -5920,
                    3104
                ],
                "id": "d909bcc5-0fbf-4f90-9e46-c1a838a6a030",
                "name": "DNS: get SPF probe"
            },
            {
                "parameters": {
                    "url": "=https://api.globalping.io/v1/measurements/{{ $json.id }}",
                    "sendHeaders": true,
                    "headerParameters": {
                        "parameters": [
                            {
                                "name": "accept",
                                "value": "application/json"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -5616,
                    3552
                ],
                "id": "8afc6ff3-560b-4966-8b25-1e0b1face8a1",
                "name": "DNS: get MX probe results"
            },
            {
                "parameters": {
                    "url": "=https://api.globalping.io/v1/measurements/{{ $json.id }}",
                    "sendHeaders": true,
                    "headerParameters": {
                        "parameters": [
                            {
                                "name": "accept",
                                "value": "application/json"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -5600,
                    3120
                ],
                "id": "496b756f-6391-4eb4-a3b1-8db124f7e0e3",
                "name": "DNS: get SPF probe results"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "f145d10e-b888-4c40-bab2-f7a279f04d5e",
                                "name": "dig_txt_output_raw",
                                "value": "={{ $json.results[0].result.rawOutput }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -5136,
                    3152
                ],
                "id": "3df75070-ab5a-412f-81ae-c8ed4c43a133",
                "name": "DNS: format SPF probe results"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "f145d10e-b888-4c40-bab2-f7a279f04d5e",
                                "name": "dig_mx_output_raw",
                                "value": "={{ $json.results[0].result.rawOutput }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -5136,
                    3584
                ],
                "id": "b2b4a72b-ebed-422c-9c7a-14534c2813ca",
                "name": "DNS: format SPF probe results1"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "f145d10e-b888-4c40-bab2-f7a279f04d5e",
                                "name": "whois_results",
                                "value": "=[{'registrar': \"{{ $json.result.registrar }}\",\"name_servers\": {{ $json.result.name_servers.toJsonString() }}}] ",
                                "type": "array"
                            },
                            {
                                "id": "ce99b4ae-1213-42bf-8d7e-d5d3a30e9e6b",
                                "name": "",
                                "value": "",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -5184,
                    4048
                ],
                "id": "0207728c-b73b-47e5-84d0-fc85647856c8",
                "name": "DNS: format Registrar&Hosting results"
            },
            {
                "parameters": {
                    "content": "# Connected providers",
                    "height": 1280,
                    "width": 2140,
                    "color": 3
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -6320,
                    2944
                ],
                "typeVersion": 1,
                "id": "b5de162e-44fc-4ad3-afbb-2e09c8512a0c",
                "name": "Sticky Note2"
            },
            {
                "parameters": {
                    "content": "# Shodan",
                    "height": 380,
                    "width": 1620,
                    "color": 2
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -6320,
                    4224
                ],
                "typeVersion": 1,
                "id": "12b38de5-4eb2-4dd2-9436-bbc8158133df",
                "name": "Sticky Note3"
            },
            {
                "parameters": {
                    "content": "# Hardenize analyse report\nworking with already created report",
                    "height": 480,
                    "width": 1660
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -6320,
                    4608
                ],
                "typeVersion": 1,
                "id": "dcc08c88-1ba6-4fe1-8c1c-e9c2f24e3082",
                "name": "Sticky Note4",
                "disabled": true
            },
            {
                "parameters": {
                    "content": "# Slides production *all at once*",
                    "height": 600,
                    "width": 1100,
                    "color": 5
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -3216,
                    992
                ],
                "typeVersion": 1,
                "id": "7df73dc3-7565-41f2-8af4-049a3edb7808",
                "name": "Sticky Note7"
            },
            {
                "parameters": {
                    "content": "# Slides production *per partes*",
                    "height": 660,
                    "width": 3060,
                    "color": 5
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -3024,
                    3504
                ],
                "typeVersion": 1,
                "id": "19538266-a1f1-4aa8-b684-85a5521d765a",
                "name": "Sticky Note8"
            },
            {
                "parameters": {
                    "mode": "combine",
                    "combineBy": "combineByPosition",
                    "numberInputs": 3,
                    "options": {
                        "includeUnpaired": true
                    }
                },
                "type": "n8n-nodes-base.merge",
                "typeVersion": 3.2,
                "position": [
                    -4864,
                    3760
                ],
                "id": "1ba51ca7-aff2-43c2-949d-9fcde287012d",
                "name": "Merge2"
            },
            {
                "parameters": {
                    "promptType": "define",
                    "text": "=#Instructions\n- You are cybersecurity expert on external posture and risks.\n- You goal is to extract all connected entities to a company based on provided TXT and MX DNS records and WHOIS data. \n- From TXT records you extract who can send emails on behalf of the company.\n- From MX records you extract who is hosting company's mail server.\n- From WHOIS data you extract the domain registrar and DNS hosting provider.\n- If the requested values cannot be extracted from the provided input data, specify \"Cannot be specified.\"\n\n# input data\nTXT records: {{$json.dig_txt_output_raw}}\n\nMX records: {{ $json.dig_mx_output_raw }}\n\nWHOIS data: {{ $json.whois_results.toJsonString() }}",
                    "batching": {}
                },
                "type": "@n8n/n8n-nodes-langchain.chainLlm",
                "typeVersion": 1.7,
                "position": [
                    -4656,
                    3760
                ],
                "id": "e964aac2-b497-4189-9a82-147539fed393",
                "name": "Basic LLM Chain"
            },
            {
                "parameters": {
                    "modelName": "models/gemini-2.5-pro",
                    "options": {}
                },
                "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
                "typeVersion": 1,
                "position": [
                    -4560,
                    3984
                ],
                "id": "ad879970-1c2a-4dcb-aebb-4e49d75fe423",
                "name": "Google Gemini Chat Model4",
                "credentials": {
                    "googlePalmApi": {
                        "id": "IPV6YJGVyoIrldXb",
                        "name": "Gemini API Vlad"
                    }
                }
            },
            {
                "parameters": {
                    "amount": 2
                },
                "type": "n8n-nodes-base.wait",
                "typeVersion": 1.1,
                "position": [
                    -5168,
                    3328
                ],
                "id": "5174d498-c17c-4bc8-88f1-a00f3a9b488f",
                "name": "Wait1",
                "webhookId": "f564353a-8240-4153-aae7-ffa1db851d72",
                "alwaysOutputData": false
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "9263373b-986c-4c33-a885-4cccd517e04e",
                                "leftValue": "={{ $json.status }}",
                                "rightValue": "in-progress",
                                "operator": {
                                    "type": "string",
                                    "operation": "equals"
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    -5408,
                    3120
                ],
                "id": "ddb95e1e-a3e8-410b-aa8f-38720b092e88",
                "name": "If is in progress"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "74c94d47-5071-4dad-a269-e5835a7484a1",
                                "name": "id",
                                "value": "={{ $json.id }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -5408,
                    3280
                ],
                "id": "367cdde8-c8f1-4539-9df4-3db7aa9afe56",
                "name": "Get ID"
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "9263373b-986c-4c33-a885-4cccd517e04e",
                                "leftValue": "={{ $json.status }}",
                                "rightValue": "in-progress",
                                "operator": {
                                    "type": "string",
                                    "operation": "equals"
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    -5408,
                    3584
                ],
                "id": "d028fd0a-0d96-439f-b466-04fd176fb7f8",
                "name": "If is in progress1"
            },
            {
                "parameters": {
                    "amount": 2
                },
                "type": "n8n-nodes-base.wait",
                "typeVersion": 1.1,
                "position": [
                    -5168,
                    3760
                ],
                "id": "2f1edc29-ff64-4a73-bfd7-b374db74bfc4",
                "name": "Wait",
                "webhookId": "f564353a-8240-4153-aae7-ffa1db851d72",
                "alwaysOutputData": false
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "74c94d47-5071-4dad-a269-e5835a7484a1",
                                "name": "id",
                                "value": "={{ $json.id }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -5408,
                    3744
                ],
                "id": "3fc8e841-50ea-4175-a59c-24f82fa81df1",
                "name": "Get ID1"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "c0ca0c03-c014-41ed-a591-1141342a3797",
                                "name": "connected_providers_text",
                                "value": "={{ $json.text }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -3376,
                    3792
                ],
                "id": "7ff79672-8444-4fb6-8686-cbbff54622f8",
                "name": "Connected providers output format"
            },
            {
                "parameters": {
                    "content": "wie u with Shodan JS cd noe",
                    "height": 80,
                    "width": 160,
                    "color": 5
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -3424,
                    1152
                ],
                "typeVersion": 1,
                "id": "f91f0ee6-f0d9-40b6-bd4c-e41ecac31b0f",
                "name": "Sticky Note9"
            },
            {
                "parameters": {
                    "content": "wie u with Hardenize JS cd noe",
                    "height": 80,
                    "width": 160,
                    "color": 5
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -3424,
                    1360
                ],
                "typeVersion": 1,
                "id": "32dcfa40-236f-4015-9d4a-137bf48d6e5a",
                "name": "Sticky Note10"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "3238799f-b24d-40ca-9328-f78cd0fc6acd",
                                "name": "domain",
                                "value": "={{ $json.domain.replaceAll('\\n','') }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -7408,
                    3472
                ],
                "id": "4a0ca6f9-0468-42be-806e-3af4088679a8",
                "name": "Sanitize domain"
            },
            {
                "parameters": {
                    "url": "=https://api.shodan.io/shodan/host/search?key=kR9h9LgJsyAoAkblJkyoRKshNJ1e5gBo&query=hostname%3A{{$json.domain}}&history=true",
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -5936,
                    4320
                ],
                "id": "446c7689-6899-4d6b-8d19-6984a0b197ea",
                "name": "Shodan"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "464db465-6b49-43b6-88f6-10ca15fc7536",
                                "name": "domain",
                                "value": "={{ $json.domain }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -6544,
                    3648
                ],
                "id": "0ca4a091-db5d-4bf2-9e35-30dc70ee33c6",
                "name": "Connected Providers trigger entry"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "ac63812f-5ed4-48cc-8723-ae9af364defa",
                                "name": "domain",
                                "value": "=costockage.fr\n",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -6304,
                    4480
                ],
                "id": "9cea515e-b05e-40f6-a041-ed50b2a82926",
                "name": "Shodan tmp entry"
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "loose",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "db0e3ee7-bf6c-4e56-9ecc-2fd856f76829",
                                "leftValue": "=[\".com\", \".me\", \".net\", \".org\", \".sh\", \".io\", \".co\", \".club\", \".biz\", \".mobi\", \".info\", \".us\", \".domains\", \".cloud\", \".fr\", \".au\", \".ru\", \".uk\", \".nl\", \".fi\", \".br\", \".hr\", \".ee\", \".ca\", \".sk\", \".se\", \".no\",\n  \".cz\", \".it\", \".in\", \".icu\", \".top\", \".xyz\", \".cn\", \".cf\", \".hk\",  \".sg\", \".pt\", \".site\", \".kz\", \".si\", \".ae\", \".do\", \".yoga\", \".xxx\",  \".ws\", \".work\", \".wiki\", \".watch\", \".wtf\", \".world\", \".website\",  \".vip\", \".ly\", \".dev\", \".network\", \".company\", \".page\", \".rs\",\n  \".run\", \".science\", \".sex\", \".shop\", \".solutions\", \".so\", \".studio\", \".style\", \".tech\", \".travel\", \".vc\", \".pub\", \".pro\", \".app\", \".press\", \".ooo\", \".de\"]",
                                "rightValue": "=.{{ $json.domain.split('.').slice(-1)[0] }}",
                                "operator": {
                                    "type": "array",
                                    "operation": "contains",
                                    "rightType": "any"
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "looseTypeValidation": true,
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    -6064,
                    4000
                ],
                "id": "ac4486f9-967d-4116-ac5b-03098ba7e214",
                "name": "Check ApiLayer supported domain"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "813eb601-e77f-4d65-9aca-e3cb9dcc597e",
                                "name": "result",
                                "value": "={\"domain\": \"{{ $json.domain }}\", \"name_servers\":[\"not found\"],\"registrar\":\"not found\"}",
                                "type": "object"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -5728,
                    4112
                ],
                "id": "e79bb5c6-74cc-45b3-b006-63d71d6367b7",
                "name": "No WHOIS data found"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "b9a6c90f-93b2-4209-9527-57aee4b60e52",
                                "name": "shodan_report",
                                "value": "={{ $json.text }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -3344,
                    4272
                ],
                "id": "4fa4ae6d-61f2-46a7-9fe7-50a78d34413c",
                "name": "Shodan report format"
            },
            {
                "parameters": {
                    "method": "POST",
                    "url": "https://api.slidesgpt.com/v1/presentations/generate",
                    "authentication": "genericCredentialType",
                    "genericAuthType": "httpBearerAuth",
                    "sendHeaders": true,
                    "headerParameters": {
                        "parameters": [
                            {
                                "name": "Content-Type",
                                "value": "application/json"
                            }
                        ]
                    },
                    "sendBody": true,
                    "specifyBody": "json",
                    "jsonBody": "={\"prompt\": \"# Instructions:\\r\\n- Produce slides for a presentation about cybersecurity posture of a selected company. \\r\\n- Target audience is C-level executives and IT managers. \\r\\n- Use graphically appealing slides design.\\r\\n- Use white background with outlines of #303388 and #2f788a colours.\\r\\n- The first slide MUST contain title \\\"Cybersecurity analysis of <domain name mentioned in the slides content>\\\" and sample logo.\\r\\n\\r\\n# Slides content\\r\\n\\r\\n{{$json.slides_content_clean}}\"}",
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -1296,
                    3632
                ],
                "id": "071949b3-ec88-4bd8-b778-f00866562164",
                "name": "Create slides with SlidesGPT",
                "credentials": {
                    "httpBearerAuth": {
                        "id": "9ln6bH3b6Ssn71xs",
                        "name": "SlidesGPT Bearer Auth account"
                    }
                },
                "disabled": true
            },
            {
                "parameters": {
                    "content": "## Save slides content",
                    "height": 468,
                    "width": 1060,
                    "color": 6
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -1420,
                    2520
                ],
                "typeVersion": 1,
                "id": "dcf25807-ca72-4fb7-bb00-1989a6b98dc6",
                "name": "Sticky Note11"
            },
            {
                "parameters": {
                    "jsCode": "/**\n * n8n Function node  ─ Run Once\n *\n * IN : items[0].json.text  → raw Markdown\n * OUT: { \"slides_content_clean\": \"<sanitised input>\" }\n *\n * (Switch to a Function Item node by replacing `items[0].json.text`\n *  with `$json.text` and returning the object directly.)\n */\n\n// 1) Grab the source text\nconst raw = items[0]?.json?.text ?? '';\n\n\n// 2) Sanitise:\n//    – collapse ALL whitespace to single spaces\n//    – strip double quotes, single quotes, and back-slashes\n//    – remove the rare U+2028/U+2029 line-separator chars\nconst sanitized = raw\n  .replace(/\\s+/g, ' ')          // whitespace → one space\n  .replace(/[\\\\'\"]/g, '')        // quotes & backslashes\n  .replace(/\\u2028|\\u2029/g, '') // JSON-breaking separators\n  .trim();\n\n// 3) Return exactly the requested object\nreturn [\n  {\n    json: {\n      slides_content_clean: sanitized\n    }\n  }\n];\n"
                },
                "type": "n8n-nodes-base.code",
                "typeVersion": 2,
                "position": [
                    -1600,
                    3632
                ],
                "id": "505db0b4-9213-4b95-ba4f-b40daafc4e32",
                "name": "Sanitise markdown"
            },
            {
                "parameters": {
                    "select": "channel",
                    "channelId": {
                        "__rl": true,
                        "value": "C091L66NL78",
                        "mode": "list",
                        "cachedResultName": "security-slides-production"
                    },
                    "text": "=(SlidesGPT) Download the slides here: {{ $json.download }}",
                    "otherOptions": {}
                },
                "type": "n8n-nodes-base.slack",
                "typeVersion": 2.3,
                "position": [
                    -208,
                    3632
                ],
                "id": "cc35d3bf-c61f-4afe-9b8d-6cdee871be71",
                "name": "Send slides url to Slack",
                "webhookId": "39a3907d-081d-4834-a3b9-6ead90f3d9a6",
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                },
                "disabled": true
            },
            {
                "parameters": {
                    "curlImport": "",
                    "httpVariantWarning": "",
                    "method": "GET",
                    "url": "=https://www.virustotal.com/api/v3/domains/{{$json.domain}}",
                    "": "",
                    "authentication": "predefinedCredentialType",
                    "nodeCredentialType": "virusTotalApi",
                    "provideSslCertificates": false,
                    "sendQuery": false,
                    "sendHeaders": false,
                    "sendBody": false,
                    "options": {},
                    "infoMessage": ""
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -5888,
                    2640
                ],
                "id": "be58791a-7d06-4cdf-9f0d-564b7c804db9",
                "name": "VirusTotal Domain Analysis",
                "extendsCredential": "virusTotalApi",
                "credentials": {
                    "virusTotalApi": {
                        "id": "NppaRF5if6BbY8sA",
                        "name": "VirusTotal account"
                    }
                }
            },
            {
                "parameters": {
                    "method": "POST",
                    "url": "https://api.flashdocs.ai/v3/generate/deck/task",
                    "authentication": "genericCredentialType",
                    "genericAuthType": "httpBearerAuth",
                    "sendHeaders": true,
                    "headerParameters": {
                        "parameters": [
                            {
                                "name": "Content-Type",
                                "value": "application/json"
                            }
                        ]
                    },
                    "sendBody": true,
                    "specifyBody": "json",
                    "jsonBody": "={\n  \"prompt\": \"# Instructions:\\r\\n- Produce slides for a presentation about cybersecurity posture of a selected company. \\r\\n- Target audience is C-level executives and IT managers. \\r\\n- Use graphically appealing slides design.\\r\\n- Use the content provided in the Slides content section\\r\\n# Slides content\\r\\n\\r\\n{{$json.slides_content_clean}}\",\n    \"source_document_id\": \"2bfecea3-00c6-4982-8f65-371387028e6a\",\n  \"presentation_name\": \"Cybersecurity Posture Analysis\",\n    \"number_slides\": 7\n}",
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -1616,
                    3952
                ],
                "id": "caea6994-64c5-45ec-b67e-5ba67ed7920c",
                "name": "FlashDocs create slides",
                "credentials": {
                    "httpBearerAuth": {
                        "id": "eg6QJFpF1jqkzK9a",
                        "name": "FLashDocs Bearer Auth account"
                    }
                }
            },
            {
                "parameters": {
                    "url": "=https://api.flashdocs.ai/v3/generate/deck/task/{{ $json.task_id }}",
                    "authentication": "genericCredentialType",
                    "genericAuthType": "httpBearerAuth",
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -1168,
                    3840
                ],
                "id": "6908cbf1-ad40-45a6-9196-2845eff1b669",
                "name": "Poll Slides creation status",
                "credentials": {
                    "httpBearerAuth": {
                        "id": "eg6QJFpF1jqkzK9a",
                        "name": "FLashDocs Bearer Auth account"
                    }
                }
            },
            {
                "parameters": {
                    "rules": {
                        "values": [
                            {
                                "conditions": {
                                    "options": {
                                        "caseSensitive": true,
                                        "leftValue": "",
                                        "typeValidation": "strict",
                                        "version": 2
                                    },
                                    "conditions": [
                                        {
                                            "id": "a5e68eb8-6f44-4d42-b86b-84e61f5b07ed",
                                            "leftValue": "={{ $json.task_id !== undefined }}",
                                            "rightValue": "",
                                            "operator": {
                                                "type": "boolean",
                                                "operation": "true",
                                                "singleValue": true
                                            }
                                        }
                                    ],
                                    "combinator": "and"
                                },
                                "renameOutput": true,
                                "outputKey": "Slides produced"
                            },
                            {
                                "conditions": {
                                    "options": {
                                        "caseSensitive": true,
                                        "leftValue": "",
                                        "typeValidation": "strict",
                                        "version": 2
                                    },
                                    "conditions": [
                                        {
                                            "leftValue": "={{ $json.detail !== undefined }}",
                                            "rightValue": "",
                                            "operator": {
                                                "type": "boolean",
                                                "operation": "true",
                                                "singleValue": true
                                            },
                                            "id": "76f58302-b180-4bf2-a7e3-979e457a3199"
                                        }
                                    ],
                                    "combinator": "and"
                                },
                                "renameOutput": true,
                                "outputKey": "Slides not produced yet"
                            }
                        ]
                    },
                    "options": {
                        "fallbackOutput": 0
                    }
                },
                "type": "n8n-nodes-base.switch",
                "typeVersion": 3.2,
                "position": [
                    -896,
                    3808
                ],
                "id": "4c3a076b-3503-4125-968b-3b2c4008e782",
                "name": "Switch"
            },
            {
                "parameters": {},
                "type": "n8n-nodes-base.wait",
                "typeVersion": 1.1,
                "position": [
                    -688,
                    3968
                ],
                "id": "e50c7730-5fa7-4c92-afaf-58c18b49651c",
                "name": "Wait for slides creation",
                "webhookId": "8f0f8562-bf82-4a08-a7c0-a2d84b602ee9"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "7c31187f-cb07-482b-a019-f39c592264c9",
                                "name": "=link_to_deck",
                                "value": "={{ $json.link_to_deck}}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -496,
                    3760
                ],
                "id": "19c63e60-0bec-4c11-b291-9b0b9361d59d",
                "name": "Get slides link"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "e5d9db51-1d59-49ac-a42d-a6b0d68e9afe",
                                "name": "task_id",
                                "value": "={{$node[\"FlashDocs create slides\"].json.task_id}}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -1360,
                    4000
                ],
                "id": "11074856-6747-4492-994e-264069030665",
                "name": "Save task ID1"
            },
            {
                "parameters": {
                    "select": "channel",
                    "channelId": {
                        "__rl": true,
                        "value": "C094VRTDT5W",
                        "mode": "list",
                        "cachedResultName": "n8n-exernal-posture-debug"
                    },
                    "text": "=(FlashDocs) Download slides here: {{ $json.link_to_deck }}",
                    "otherOptions": {}
                },
                "type": "n8n-nodes-base.slack",
                "typeVersion": 2.3,
                "position": [
                    -208,
                    3760
                ],
                "id": "6418e341-b900-4324-be44-e453e6cf6f7b",
                "name": "Send FlashDocs slides to Slack",
                "webhookId": "f52cbb0c-75d0-46d8-9fd0-01951ccc4a66",
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                }
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "c1808316-17f5-4544-8522-5bb89ebf71a9",
                                "name": "slides_content_clean",
                                "value": "# Instructions:\\r\\n- Produce slides for a presentation about cybersecurity posture of a selected company. \\r\\n- Target audience is C-level executives and IT managers. \\r\\n- Use graphically appealing slides design.\\r\\n- Use white background with outlines of #303388 and #2f788a colours.\\r\\n- The first slide MUST contain title \\\"Cybersecurity analysis of costockage.fr\\\" and sample logo.\\r\\n\\r\\n# Slides content\\r\\n\\r\\n## Cybersecurity Posture Evaluation: costockage.fr\\r\\n\\r\\ncostockage.fr currently exhibits a mixed cybersecurity posture, with some commendable security implementations offset by critical vulnerabilities and significant security gaps that necessitate immediate attention. While foundational elements such as DNS and certificate management are largely well-configured, the presence of actively exploited and high-impact vulnerabilities, particularly concerning an outdated web server, poses a substantial risk to the organisation's availability, data confidentiality, and brand reputation.\\r\\n\\r\\n## Key Strengths:\\r\\n\\r\\n- Robust DNS Configuration: The domain's DNS zone and records are well-configured, ensuring reliable name resolution.\\r\\n\\r\\n- Effective Certificate Authority Authorization (CAA) Policy: A well-configured CAA policy is in place, which restricts which Certificate Authorities are authorised to issue certificates for costockage.fr. This is a strong measure against potential certificate misissuance.\\r\\n\\r\\n- Strong Web Traffic Encryption (TLS) on WWW:\\r\\n\\r\\n- The website supports modern TLS protocols, including TLS v1.3, and effectively uses strong key exchange mechanisms, including post-quantum cryptography (PQC). The server prioritises secure cipher suites, ensuring optimal encryption for web traffic.\\r\\n\\r\\n- All TLS connections meet Apple's and Chrome's Certificate Transparency requirements.\\r\\n\\r\\n- Secure Web Content Delivery: All embedded resources on the homepage, such as scripts, CSS files, and media, are delivered securely over HTTPS, mitigating mixed content security issues.\\r\\n\\r\\n- Well-Configured Email Security (SMTP): The mail servers support STARTTLS with robust TLS 1.2 configurations and valid certificates. Furthermore, a valid Sender Policy Framework (SPF) policy is implemented, which helps in identifying spam and preventing email spoofing.\\r\\n\\r\\n## Critical Risks and Areas for Immediate Attention:\\r\\n\\r\\n- Severe HTTP\\/2 Vulnerabilities (High Risk of Denial of Service - DoS):\\r\\n\\r\\n- The most pressing concern is the presence of multiple vulnerabilities related to the HTTP\\/2 protocol, which has very high EPSS (Exploit Prediction Scoring System) scores, indicating a high likelihood of exploitation.\\r\\n\\r\\n- This includes the actively exploited CVE-2023-44487, known as the HTTP\\/2 Rapid Reset Attack, which allows attackers to rapidly reset streams, consuming server resources and leading to denial of service.\\r\\n\\r\\n- Other identified HTTP\\/2 vulnerabilities could lead to excessive memory or CPU consumption and header leaks.\\r\\n\\r\\n- The presence of these issues is directly linked to the outdated Nginx web server (version 1.10.3), as many of these CVEs specifically affect Nginx versions prior to available updates (e.g., Nginx before 1.13.6, 1.13.2, 1.15.6, or 1.14.1). This outdated software presents a critical and immediate threat to service availability.\\r\\n\\r\\n- Unsecured Cookies (Information Exposure): The website transmits multiple cookies without the 'secure' flag set, despite being sent over an encrypted HTTPS channel. This vulnerability allows an active network attacker to easily intercept and recover these cookies, potentially leading to unauthorised access or exposure of sensitive user information.\\r\\n\\r\\n- Lack of Essential Web Security Features:\\r\\n\\r\\n- HTTP Strict Transport Security (HSTS) is not supported. Without HSTS, browsers are not explicitly instructed to always use HTTPS, leaving users susceptible to man-in-the-middle (MITM) attacks and allowing insecure plaintext requests to be made before a redirect occurs.\\r\\n\\r\\n- Content Security Policy (CSP) is also not supported. This omission means the website lacks a crucial security layer that could mitigate attacks such as cross-site scripting (XSS) and other content injection vulnerabilities.\\r\\n\\r\\n- Support for Deprecated TLS Protocols (Compliance and Security Risk): The website continues to support TLS 1.0 and TLS 1.1. These older protocols are deprecated and contain known security weaknesses. Continued support for TLS 1.0, in particular, poses a PCI DSS compliance issue as of July 2018, and generally increases the attack surface for all users.\\r\\n\\r\\n- Inactive DMARC Policy (Email Spoofing Risk): While a DMARC policy is present, its 'p' directive is set to 'none', effectively disabling enforcement. This leaves the domain vulnerable to email spoofing and phishing attempts, as receiving mail servers are not instructed to quarantine or reject unauthenticated emails from the domain, potentially damaging brand trust and user safety.\\r\\n\\r\\n- DNSSEC Not Implemented: DNSSEC is not supported or implemented on costockage.fr. This means there is no cryptographic validation of DNS responses, leaving the domain vulnerable to DNS manipulation attacks, where attackers could redirect users to malicious websites.\\r\\n\\r\\n## Strategic Recommendations:\\r\\n\\r\\n1. Prioritise Nginx Server Upgrade and Patching: The most urgent and critical action is to update the Nginx server to the latest secure version. This will address the severe and actively exploited HTTP\\/2 vulnerabilities and significantly reduce the risk of denial of service attacks.\\r\\n\\r\\n2. Implement Secure Cookie Flags: Immediately configure all cookies transmitted over HTTPS to include the 'secure' flag. This is a fundamental step to prevent sensitive cookie data from being intercepted.\\r\\n\\r\\n3. Deploy HSTS and CSP: Implement HTTP Strict Transport Security (HSTS) to enforce HTTPS usage and Content Security Policy (CSP) to provide robust protection against a wide range of web-based attacks, including XSS.\\r\\n\\r\\n4.\\r\\nDisable Deprecated TLS Protocols: Cease support for TLS 1.0 and TLS 1.1 to improve overall security, reduce the attack surface, and ensure compliance with modern security standards like PCI DSS.\\r\\n\\r\\n5. Activate DMARC Enforcement: Modify the DMARC policy to 'quarantine' or 'reject' to actively combat email spoofing and phishing attacks, thereby protecting brand reputation and user trust.\\r\\n\\r\\n6. Consider DNSSEC Implementation: Evaluate and plan for the implementation of DNSSEC to enhance DNS security and protect against DNS spoofing and manipulation.\\r\\n\\r\\nAddressing these critical areas will substantially improve costockage.fr's cybersecurity posture, enhancing protection against significant threats and ensuring a more secure experience for users.\\r\\n\\r\\n",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -1824,
                    4320
                ],
                "id": "89abeeab-57c2-4be1-b6fb-21a5be425baa",
                "name": "TMP slides content"
            },
            {
                "parameters": {
                    "modelName": "models/gemini-2.5-pro",
                    "options": {}
                },
                "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
                "typeVersion": 1,
                "position": [
                    -5420,
                    2820
                ],
                "id": "8c57d1a1-0a59-4562-bd5b-4f5d6ddca9c6",
                "name": "Google Gemini Chat Model6",
                "credentials": {
                    "googlePalmApi": {
                        "id": "IPV6YJGVyoIrldXb",
                        "name": "Gemini API Vlad"
                    }
                }
            },
            {
                "parameters": {
                    "promptType": "define",
                    "text": "=VirusTotal Analysis: \n{{ $json.virustotal_data.toJsonString() }}",
                    "messages": {
                        "messageValues": [
                            {
                                "message": "=#Instructions \n- You are cybersecurity expert on external posture and risks. \n- Your goal is to create a summary of the VirusTotal domain analysis.\n- The summary MUST contain every fact mentioned in the source analysis."
                            }
                        ]
                    },
                    "batching": {}
                },
                "type": "@n8n/n8n-nodes-langchain.chainLlm",
                "typeVersion": 1.7,
                "position": [
                    -5280,
                    2640
                ],
                "id": "a305ce8c-556e-4dda-b4dc-3587067395f2",
                "name": "VirusTotal summary"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "8d0b43de-6eb2-4d27-b663-4a749095fdc0",
                                "name": "virustotal_analysis",
                                "value": "={{ $json.text }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -3440,
                    2864
                ],
                "id": "af305c61-b968-457f-aaf1-95fcf2a7d74f",
                "name": "VirusTotal output format"
            },
            {
                "parameters": {
                    "content": "# VirusTotal",
                    "height": 420,
                    "width": 1780
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -6320,
                    2528
                ],
                "typeVersion": 1,
                "id": "b92627b6-396a-471f-8dcf-c00031a00380",
                "name": "Sticky Note14"
            },
            {
                "parameters": {
                    "select": "channel",
                    "channelId": {
                        "__rl": true,
                        "value": "C094VRTDT5W",
                        "mode": "list",
                        "cachedResultName": "n8n-exernal-posture-debug"
                    },
                    "text": "={{ $json.reports_content }}",
                    "otherOptions": {}
                },
                "type": "n8n-nodes-base.slack",
                "typeVersion": 2.3,
                "position": [
                    -640,
                    2280
                ],
                "id": "7037ebdf-5b51-4adf-95f4-098a1f57f521",
                "name": "Send reports to Slack",
                "webhookId": "5bd82570-027b-4fca-b7d2-150e32b91669",
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                }
            },
            {
                "parameters": {
                    "method": "POST",
                    "url": "=https://api.hardenize.com/v1/org/<your owg>/assessments",
                    "authentication": "genericCredentialType",
                    "genericAuthType": "httpBasicAuth",
                    "sendHeaders": true,
                    "headerParameters": {
                        "parameters": [
                            {
                                "name": "Content-Type",
                                "value": "application/json"
                            }
                        ]
                    },
                    "sendBody": true,
                    "bodyParameters": {
                        "parameters": [
                            {
                                "name": "hostname",
                                "value": "={{ $json.domain }}"
                            },
                            {
                                "name": "clearCache",
                                "value": "false"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -6064,
                    4832
                ],
                "id": "35462402-d6c8-4247-8ba6-13149cfd130d",
                "name": "Create Hardenize Assessment",
                "credentials": {
                    "httpBasicAuth": {
                        "id": "JYOHV0G4aRqDsqPm",
                        "name": "Hardenize Basic Auth"
                    }
                }
            },
            {
                "parameters": {
                    "url": "=https://api.hardenize.com/v1/org/<your org>/assessments/{{ $node[\"Create Hardenize Assessment\"].json.assessment.host }};status ",
                    "authentication": "genericCredentialType",
                    "genericAuthType": "httpBasicAuth",
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -5856,
                    4832
                ],
                "id": "2694d91a-f140-4336-abf6-b61e5c34cb14",
                "name": "Get Hardenize assessment status",
                "credentials": {
                    "httpBasicAuth": {
                        "id": "JYOHV0G4aRqDsqPm",
                        "name": "Hardenize Basic Auth"
                    }
                }
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "ab00b289-c0b1-48a1-9acf-f0b33c0fbaf3",
                                "name": "domain",
                                "value": "salusphereglobal.com",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -7960,
                    2440
                ],
                "id": "b5cb0471-7e78-40a9-bfef-b1b989aad7df",
                "name": "Manual Domain Set1"
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "05f56ef9-60ba-4e5a-a6b5-19afa75876f7",
                                "leftValue": "={{ $json.assessment.status }}",
                                "rightValue": "available",
                                "operator": {
                                    "type": "string",
                                    "operation": "notEquals"
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    -5664,
                    4832
                ],
                "id": "e8423ed6-2e5b-42f0-8a43-f4a45065f4fa",
                "name": "If"
            },
            {
                "parameters": {
                    "amount": 3
                },
                "type": "n8n-nodes-base.wait",
                "typeVersion": 1.1,
                "position": [
                    -5664,
                    4640
                ],
                "id": "79ffd0f6-ed86-4fb8-95f6-2bba6d1dd49e",
                "name": "Wait for Hardenize report finish",
                "webhookId": "0faa3f45-e2f6-42b9-a523-8b66ed49df5e"
            },
            {
                "parameters": {
                    "url": "=https://api.hardenize.com/v1/org/<your org>/reportCards/{{ $json.assessment.host }}",
                    "authentication": "genericCredentialType",
                    "genericAuthType": "httpBasicAuth",
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -5424,
                    4848
                ],
                "id": "02ae03d9-e1b4-4b02-8362-de65c9513c75",
                "name": "Get Hardenize Report Card",
                "credentials": {
                    "httpBasicAuth": {
                        "id": "JYOHV0G4aRqDsqPm",
                        "name": "Hardenize Basic Auth"
                    }
                }
            },
            {
                "parameters": {
                    "formTitle": "Domain security report",
                    "formFields": {
                        "values": [
                            {
                                "fieldLabel": "domain name",
                                "placeholder": "domain.com",
                                "requiredField": true
                            },
                            {
                                "fieldLabel": "Where to store the report?",
                                "fieldType": "dropdown",
                                "fieldOptions": {
                                    "values": [
                                        {
                                            "option": "Save to NAS2"
                                        },
                                        {
                                            "option": "Post to slack"
                                        },
                                        {
                                            "option": "Save to box"
                                        }
                                    ]
                                },
                                "multiselect": true,
                                "requiredField": true
                            }
                        ]
                    },
                    "options": {
                        "buttonLabel": "Create domain security report"
                    }
                },
                "type": "n8n-nodes-base.formTrigger",
                "typeVersion": 2.2,
                "position": [
                    -8080,
                    3488
                ],
                "id": "6815bf4e-977e-4341-b55b-1180f267afd0",
                "name": "On form submission",
                "webhookId": "ae498197-4506-410a-8985-efc65a43fec3"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "20c356b0-0bf3-4267-890f-010f7921256c",
                                "name": "domain",
                                "value": "={{ $json['domain name'] }}",
                                "type": "string"
                            },
                            {
                                "id": "21a2ece3-a847-439d-b734-c9d9a69a9628",
                                "name": "report_storage",
                                "value": "={{ $json['Where to store the report?'] }}",
                                "type": "array"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -7840,
                    3488
                ],
                "id": "9984ff99-c967-4aaa-8dce-352b5e4cc489",
                "name": "Parse input form"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "1ec06c81-b632-46e6-9aa8-0c4bd07fb99c",
                                "name": "reportCard",
                                "value": "={{ $json.reportCard }}",
                                "type": "object"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -5200,
                    4848
                ],
                "id": "f0f6a972-9840-4c02-a15f-ec409e327527",
                "name": "Format report card"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "ac63812f-5ed4-48cc-8723-ae9af364defa",
                                "name": "domain",
                                "value": "={{ $json.domain }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -6528,
                    2640
                ],
                "id": "9ab95039-b4d9-4d20-802a-f81f553f0fb0",
                "name": "VirusTotal entry point"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "ac63812f-5ed4-48cc-8723-ae9af364defa",
                                "name": "domain",
                                "value": "={{ $json.domain }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -6528,
                    4848
                ],
                "id": "2c4222d8-4282-4937-8b94-8ccd004c0f2a",
                "name": "Hardenize entry point"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "ac63812f-5ed4-48cc-8723-ae9af364defa",
                                "name": "domain",
                                "value": "={{ $json.domain }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -6544,
                    4320
                ],
                "id": "1a9ec759-3dde-405f-bbb8-dfa3eec50f5b",
                "name": "Shodan entry point"
            },
            {
                "parameters": {
                    "select": "channel",
                    "channelId": {
                        "__rl": true,
                        "value": "C094VRTDT5W",
                        "mode": "list",
                        "cachedResultName": "n8n-exernal-posture-debug"
                    },
                    "text": "={{ $json.slides_content }}",
                    "otherOptions": {}
                },
                "type": "n8n-nodes-base.slack",
                "typeVersion": 2.3,
                "position": [
                    -920,
                    2840
                ],
                "id": "9e14f894-aa60-42f2-abeb-232914468037",
                "name": "Send slides content to Slack",
                "webhookId": "5bd82570-027b-4fca-b7d2-150e32b91669",
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                }
            },
            {
                "parameters": {
                    "operation": "write",
                    "fileName": "/home/node/.n8n/reports/test-execnode.txt",
                    "options": {}
                },
                "type": "n8n-nodes-base.readWriteFile",
                "typeVersion": 1,
                "position": [
                    -7184,
                    2928
                ],
                "id": "a75e4ff2-1b74-421f-a4c0-45e95ad093fa",
                "name": "Read/Write Files from Disk"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "8817e029-2217-4145-97d1-d2b02e91a74a",
                                "name": "domain",
                                "value": "domain.com",
                                "type": "string"
                            },
                            {
                                "id": "8b19afb4-df77-463c-9cbd-53a478625295",
                                "name": "report",
                                "value": "kausndakudnawdkuawdnawu,nwda",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -7904,
                    2928
                ],
                "id": "5a2aba36-2feb-4484-bc5b-c4e26e638426",
                "name": "test data"
            },
            {
                "parameters": {
                    "operation": "toText",
                    "sourceProperty": "=domain",
                    "options": {}
                },
                "type": "n8n-nodes-base.convertToFile",
                "typeVersion": 1.1,
                "position": [
                    -7680,
                    2928
                ],
                "id": "0bd61341-bf6b-486b-a25d-93e21fbd2bd0",
                "name": "Convert to File"
            },
            {
                "parameters": {
                    "command": "mkdir -p /data/n8n/reports"
                },
                "type": "n8n-nodes-base.executeCommand",
                "typeVersion": 1,
                "position": [
                    -7328,
                    3072
                ],
                "id": "8ff46562-5327-4051-8558-1f74fbef6486",
                "name": "Execute Command"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "ac63812f-5ed4-48cc-8723-ae9af364defa",
                                "name": "domain",
                                "value": "={{ $json.domain }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -6528,
                    2336
                ],
                "id": "694d5b19-76df-4c00-af4d-f2b309475866",
                "name": "Subdomain enum entry point"
            },
            {
                "parameters": {
                    "method": "POST",
                    "url": "https://subdomain-enumeration-api.p.rapidapi.com/subdomainenumerator",
                    "authentication": "genericCredentialType",
                    "genericAuthType": "httpHeaderAuth",
                    "sendHeaders": true,
                    "headerParameters": {
                        "parameters": [
                            {
                                "name": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "name": "x-rapidapi-host",
                                "value": "subdomain-enumeration-api.p.rapidapi.com"
                            }
                        ]
                    },
                    "sendBody": true,
                    "bodyParameters": {
                        "parameters": [
                            {
                                "name": "domain",
                                "value": "={{ $json.domain }}"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [
                    -5456,
                    2336
                ],
                "id": "2d044a1f-0d22-42e5-89c3-281a98a945f4",
                "name": "Enum subdomains",
                "credentials": {
                    "httpHeaderAuth": {
                        "id": "kWTW2c42aDEKNYZ5",
                        "name": "RapidAPI Subdomain Enum"
                    }
                }
            },
            {
                "parameters": {
                    "content": "# Subdomain enumeration",
                    "height": 320,
                    "width": 1776,
                    "color": 2
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -6320,
                    2208
                ],
                "typeVersion": 1,
                "id": "ec35ed27-0179-4c80-8d9b-5ea62ed5ff3e",
                "name": "Sticky Note"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "a6e73d9c-758d-483f-90f5-3c4cb00e5587",
                                "name": "subdomains",
                                "value": "={{ $json.subdomains.toJsonString() }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -3456,
                    2320
                ],
                "id": "38fd3a90-eb6e-437d-b863-7257d262520e",
                "name": "Format subdomains list"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "e5da1d4e-3fad-4af6-a418-08c24f3ab338",
                                "name": "=slides_content",
                                "value": "={{$json.text }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -1620,
                    2680
                ],
                "id": "45960077-6e0f-4006-9e66-9f118a8dccb9",
                "name": "Save slides content entrypoint"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "e5da1d4e-3fad-4af6-a418-08c24f3ab338",
                                "name": "=reports_content",
                                "value": "=# Shodan report: \n\n{{ $node['Merge sub-reports'].json.shodan_report }}\n---------------- \n# Hardenize report: \n{{ $node['Merge sub-reports'].json.hardenize_report }}\n----------------\n# VirusTotal report:\n{{ $node['Merge sub-reports'].json.virustotal_analysis }}\n----------------\n# Connected providers:\n{{ $node['Merge sub-reports'].json.connected_providers_text }}\n# Subdomains:\n{{ $node['Merge sub-reports'].json.subdomains }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -1640,
                    2200
                ],
                "id": "65444997-1513-4840-9ce9-3ced6c457c91",
                "name": "Save reports entrypoint"
            },
            {
                "parameters": {
                    "operation": "write",
                    "fileName": "={{ $node[\"Set output dir path\"].json.output_dir_path }}/sub-reports.md",
                    "options": {}
                },
                "type": "n8n-nodes-base.readWriteFile",
                "typeVersion": 1,
                "position": [
                    -640,
                    2100
                ],
                "id": "11ee7a8a-c91a-467a-8c70-31b0f00bae0e",
                "name": "Save reports to disk"
            },
            {
                "parameters": {
                    "operation": "write",
                    "fileName": "={{ $node[\"Set output dir path\"].json.output_dir_path }}/slides-content.md",
                    "options": {}
                },
                "type": "n8n-nodes-base.readWriteFile",
                "typeVersion": 1,
                "position": [
                    -620,
                    2620
                ],
                "id": "4186bc2b-23a6-4b3c-82f5-f55f8a8f02a1",
                "name": "Save slides content to disk",
                "retryOnFail": true
            },
            {
                "parameters": {
                    "operation": "toText",
                    "sourceProperty": "reports_content",
                    "options": {}
                },
                "type": "n8n-nodes-base.convertToFile",
                "typeVersion": 1.1,
                "position": [
                    -980,
                    2080
                ],
                "id": "0338e171-0f5e-449b-8dad-c6a1d26f5d9a",
                "name": "Convert to File1"
            },
            {
                "parameters": {
                    "operation": "toText",
                    "sourceProperty": "slides_content",
                    "options": {}
                },
                "type": "n8n-nodes-base.convertToFile",
                "typeVersion": 1.1,
                "position": [
                    -960,
                    2620
                ],
                "id": "d4136241-5a69-41bd-b499-0bbb147a0746",
                "name": "Convert to File2"
            },
            {
                "parameters": {
                    "command": "=mkdir -p {{ $node[\"Set output dir path\"].json.output_dir_path }}"
                },
                "type": "n8n-nodes-base.executeCommand",
                "typeVersion": 1,
                "position": [
                    -2352,
                    3728
                ],
                "id": "4bb473c1-ad0a-4e7b-a499-3e3d2199afe0",
                "name": "Create output directory"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "e5307db5-05c0-4cfe-ba3c-243f018089b7",
                                "name": "output_dir_path",
                                "value": "=/data/n8n/reports/{{ $node[\"Sanitize domain\"].json.domain }}_{{ $now.format('yyyy-MM-dd_HH-mm-ss') }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -2592,
                    3728
                ],
                "id": "d17c5891-4b6d-44c8-8491-01f37a165456",
                "name": "Set output dir path"
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "4c01889c-3dba-467e-8520-9d672d403db2",
                                "leftValue": "={{ $node[\"Parse input form\"].json.report_storage }}",
                                "rightValue": "=Save to NAS2",
                                "operator": {
                                    "type": "array",
                                    "operation": "contains",
                                    "rightType": "any"
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    -1260,
                    2120
                ],
                "id": "6ba93a27-e288-4398-bedd-d5dc00ae0bde",
                "name": "SAve to nas2??"
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "15c1bd20-2d44-443e-99e3-88815611d52f",
                                "leftValue": "={{$node['Parse input form'].json.report_storage}}",
                                "rightValue": "Post to slack",
                                "operator": {
                                    "type": "array",
                                    "operation": "contains",
                                    "rightType": "any"
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    -1240,
                    2300
                ],
                "id": "e080e7d8-0a00-4865-b99d-d5cd8894bf42",
                "name": "Post to slack??"
            },
            {
                "parameters": {
                    "mode": "combine",
                    "combineBy": "combineByPosition",
                    "numberInputs": 5,
                    "options": {}
                },
                "type": "n8n-nodes-base.merge",
                "typeVersion": 3.2,
                "position": [
                    -2768,
                    3680
                ],
                "id": "0d8a02d5-a37c-4edc-8547-5c817cda0666",
                "name": "Merge sub-reports"
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "be6a60c4-3602-4937-a5ca-e4ef53fe9d2b",
                                "name": "gemini_canvas_prompt",
                                "value": "=# Instructions\n- Create slides for a cybersecurity posture analysis of a selected domain using the provided brand guidelines, brand logo and slides content.\n- Make the slides in A4 portrait format.\n- The content of the slides MUST be based ONLY on the provided slides content.\n- The canvas MUST allow the slide to stretch vertically to contain all the textual content within the slide.\n- Each slide footer will contain: TLP (Traffic Light Protocol) mark Amber+Strict aligned to left, the logo centered and page number aligned to right.\n\n# Brand guidelines:add brand guidelines\n\n# Brand logo\n\n- logo url\n- Logo MUST be placed to contrast background (e.g. white) to be easily readable.\n- ALWAYS use the SVG logo file using this link and control its size.\n\n# Slides content:\n{{$json.text }}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -1360,
                    3080
                ],
                "id": "b6af5a97-aad5-4de7-889c-179659c984dd",
                "name": "Generate Gemini Canvas prompt"
            },
            {
                "parameters": {
                    "operation": "write",
                    "fileName": "={{ $node[\"Set output dir path\"].json.output_dir_path }}/gemini-canvas-prompt.md",
                    "options": {}
                },
                "type": "n8n-nodes-base.readWriteFile",
                "typeVersion": 1,
                "position": [
                    -600,
                    3080
                ],
                "id": "087856d0-999b-45a9-8477-7b81523844f4",
                "name": "Save slides content to disk1",
                "retryOnFail": true
            },
            {
                "parameters": {
                    "operation": "toText",
                    "sourceProperty": "gemini_canvas_prompt",
                    "options": {}
                },
                "type": "n8n-nodes-base.convertToFile",
                "typeVersion": 1.1,
                "position": [
                    -880,
                    3080
                ],
                "id": "0ded152c-d87a-4139-bec5-dfc85c99c5d9",
                "name": "Convert Gemini Canvas prompt to File"
            },
            {
                "parameters": {
                    "content": "## Gemini Canvas Prompt generation",
                    "height": 480,
                    "width": 1160,
                    "color": 6
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -1420,
                    3000
                ],
                "typeVersion": 1,
                "id": "9e1d72e0-9ee6-4215-a91f-a5958167e574",
                "name": "Sticky Note1"
            },
            {
                "parameters": {
                    "content": "## Save sub-reports",
                    "height": 468,
                    "width": 1060,
                    "color": 6
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                    -1420,
                    2040
                ],
                "typeVersion": 1,
                "id": "bd12f831-093a-4f68-9264-3a096cd32dcc",
                "name": "Sticky Note15"
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "4c01889c-3dba-467e-8520-9d672d403db2",
                                "leftValue": "={{ $node[\"Parse input form\"].json.report_storage }}",
                                "rightValue": "=Save to NAS2",
                                "operator": {
                                    "type": "array",
                                    "operation": "contains",
                                    "rightType": "any"
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    -1280,
                    2620
                ],
                "id": "ff3e1b7d-4677-4527-88b2-27b9e4e542b6",
                "name": "SAve to nas2??1"
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "4c01889c-3dba-467e-8520-9d672d403db2",
                                "leftValue": "={{ $node[\"Parse input form\"].json.report_storage }}",
                                "rightValue": "=Save to NAS2",
                                "operator": {
                                    "type": "array",
                                    "operation": "contains",
                                    "rightType": "any"
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    -1140,
                    3100
                ],
                "id": "ca945ea2-a28d-462f-90be-1a9b3d35b842",
                "name": "SAve to nas2??2"
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "15c1bd20-2d44-443e-99e3-88815611d52f",
                                "leftValue": "={{$node['Parse input form'].json.report_storage}}",
                                "rightValue": "Post to slack",
                                "operator": {
                                    "type": "array",
                                    "operation": "contains",
                                    "rightType": "any"
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    -1280,
                    2820
                ],
                "id": "4de4fd72-3e9f-4e31-89df-7d2ed84c1ad6",
                "name": "Post to slack??1"
            },
            {
                "parameters": {
                    "select": "channel",
                    "channelId": {
                        "__rl": true,
                        "value": "C094VRTDT5W",
                        "mode": "list",
                        "cachedResultName": "n8n-exernal-posture-debug"
                    },
                    "text": "={{ $json.gemini_canvas_prompt }}",
                    "otherOptions": {}
                },
                "type": "n8n-nodes-base.slack",
                "typeVersion": 2.3,
                "position": [
                    -740,
                    3300
                ],
                "id": "1de710ba-0aa4-4a41-8a84-5a5a1f3369a3",
                "name": "Send slides content to Slack1",
                "webhookId": "5bd82570-027b-4fca-b7d2-150e32b91669",
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                }
            },
            {
                "parameters": {
                    "conditions": {
                        "options": {
                            "caseSensitive": true,
                            "leftValue": "",
                            "typeValidation": "strict",
                            "version": 2
                        },
                        "conditions": [
                            {
                                "id": "15c1bd20-2d44-443e-99e3-88815611d52f",
                                "leftValue": "={{$node['Parse input form'].json.report_storage}}",
                                "rightValue": "Post to slack",
                                "operator": {
                                    "type": "array",
                                    "operation": "contains",
                                    "rightType": "any"
                                }
                            }
                        ],
                        "combinator": "and"
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                    -1140,
                    3300
                ],
                "id": "13c03b52-7777-40a9-844f-87cb1f1e47a2",
                "name": "Post to slack??2"
            },
            {
                "parameters": {
                    "select": "channel",
                    "channelId": {
                        "__rl": true,
                        "value": "C094VRTDT5W",
                        "mode": "list",
                        "cachedResultName": "n8n-exernal-posture-debug"
                    },
                    "text": "=Started external posture workflow\nDomain: {{ $json.domain }}\nStart time: {{ $now.format('yyyy-MM-dd hh:mm:ss') }}\n",
                    "otherOptions": {}
                },
                "type": "n8n-nodes-base.slack",
                "typeVersion": 2.3,
                "position": [
                    -7600,
                    3360
                ],
                "id": "bf3543fe-c9ff-4048-8382-f6f047cbedc9",
                "name": "Send start message",
                "webhookId": "f7f34ff6-2478-4591-9c25-524934999a21",
                "credentials": {
                    "slackApi": {
                        "id": "D46MM8DJohIijfoh",
                        "name": "Slack account"
                    }
                }
            },
            {
                "parameters": {
                    "assignments": {
                        "assignments": [
                            {
                                "id": "e43ee450-b136-44e8-afda-e6463193cdc9",
                                "name": "virustotal_data",
                                "value": "={\n  \"reputation\": \"{{ $json[\"data\"][\"attributes\"][\"reputation\"] }}\",\n  \"lastAnalysisDate\": \"{{ $json[\"data\"][\"attributes\"][\"last_analysis_date\"] }}\",\n  \"lastAnalysisStats\": \"{{ $json[\"data\"][\"attributes\"][\"last_analysis_stats\"].toJsonString() }}\",\n  \"totalVotes\": \"{{ $json[\"data\"][\"attributes\"][\"total_votes\"].toJsonString() }}\",\n  \"categories\": \"{{ $json[\"data\"][\"attributes\"][\"categories\"].toJsonString() }}\",\n  \"tags\": \"{{ $json[\"data\"][\"attributes\"][\"tags\"].toJsonString() }}\",\n  \"lastAnalysisResults\": \"{{ $json[\"data\"][\"attributes\"][\"last_analysis_results\"].toJsonString() }}\"\n}",
                                "type": "string"
                            }
                        ]
                    },
                    "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                    -5560,
                    2640
                ],
                "id": "4b56f903-7a80-41c0-97cd-dfba956bf2be",
                "name": "Parse VirusTotal response"
            },
            {
                "parameters": {
                    "options": {}
                },
                "type": "n8n-nodes-base.splitInBatches",
                "typeVersion": 3,
                "position": [
                    -5100,
                    1960
                ],
                "id": "ca6f5f24-5237-4363-9da0-278a80500977",
                "name": "Loop Over Items"
            }
        ],
        "connections": {
            "Slack Trigger": {
                "main": [
                    [
                        {
                            "node": "Get Domain",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Get Domain": {
                "main": [
                    [
                        {
                            "node": "Sanitize domain",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "When clicking ‘Execute workflow’": {
                "main": [
                    [
                        {
                            "node": "Manual Domain Set1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Shodan Output parse": {
                "main": [
                    [
                        {
                            "node": "Merge1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Google Gemini Chat Model": {
                "ai_languageModel": [
                    [
                        {
                            "node": "Slides content production",
                            "type": "ai_languageModel",
                            "index": 0
                        }
                    ]
                ]
            },
            "Remove unnecessary fields": {
                "main": [
                    [
                        {
                            "node": "Summarize Shodan",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Summarize Shodan": {
                "main": [
                    [
                        {
                            "node": "Shodan report format",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Summarize Hardenize": {
                "main": [
                    [
                        {
                            "node": "Edit Fields1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Google Gemini Chat Model1": {
                "ai_languageModel": [
                    [
                        {
                            "node": "Summarize Hardenize",
                            "type": "ai_languageModel",
                            "index": 0
                        }
                    ]
                ]
            },
            "Slides content production1": {
                "main": [
                    [
                        {
                            "node": "Sanitise markdown",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Save slides content entrypoint",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Generate Gemini Canvas prompt",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Google Gemini Chat Model2": {
                "ai_languageModel": [
                    [
                        {
                            "node": "Summarize Shodan",
                            "type": "ai_languageModel",
                            "index": 0
                        }
                    ]
                ]
            },
            "Edit Fields1": {
                "main": [
                    [
                        {
                            "node": "Merge sub-reports",
                            "type": "main",
                            "index": 1
                        }
                    ]
                ]
            },
            "Merge1": {
                "main": [
                    [
                        {
                            "node": "Slides content production",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Hardenize Output parse1": {
                "main": [
                    [
                        {
                            "node": "Merge1",
                            "type": "main",
                            "index": 1
                        }
                    ]
                ]
            },
            "Set domain": {
                "main": [
                    [
                        {
                            "node": "DNS: get MX probe",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "DNS: get SPF probe",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Check ApiLayer supported domain",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "DNS: get MX probe": {
                "main": [
                    [
                        {
                            "node": "DNS: get MX probe results",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Get DNS Registrar&Hosting (WHOIS)": {
                "main": [
                    [
                        {
                            "node": "DNS: format Registrar&Hosting results",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "DNS: get SPF probe": {
                "main": [
                    [
                        {
                            "node": "DNS: get SPF probe results",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "DNS: get MX probe results": {
                "main": [
                    [
                        {
                            "node": "If is in progress1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "DNS: get SPF probe results": {
                "main": [
                    [
                        {
                            "node": "If is in progress",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "DNS: format SPF probe results": {
                "main": [
                    [
                        {
                            "node": "Merge2",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "DNS: format SPF probe results1": {
                "main": [
                    [
                        {
                            "node": "Merge2",
                            "type": "main",
                            "index": 1
                        }
                    ]
                ]
            },
            "DNS: format Registrar&Hosting results": {
                "main": [
                    [
                        {
                            "node": "Merge2",
                            "type": "main",
                            "index": 2
                        }
                    ]
                ]
            },
            "Merge2": {
                "main": [
                    [
                        {
                            "node": "Basic LLM Chain",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Basic LLM Chain": {
                "main": [
                    [
                        {
                            "node": "Connected providers output format",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Google Gemini Chat Model4": {
                "ai_languageModel": [
                    [
                        {
                            "node": "Basic LLM Chain",
                            "type": "ai_languageModel",
                            "index": 0
                        }
                    ]
                ]
            },
            "Wait1": {
                "main": [
                    [
                        {
                            "node": "Get ID",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "If is in progress": {
                "main": [
                    [
                        {
                            "node": "Wait1",
                            "type": "main",
                            "index": 0
                        }
                    ],
                    [
                        {
                            "node": "DNS: format SPF probe results",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Get ID": {
                "main": [
                    [
                        {
                            "node": "DNS: get SPF probe results",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "If is in progress1": {
                "main": [
                    [
                        {
                            "node": "Wait",
                            "type": "main",
                            "index": 0
                        }
                    ],
                    [
                        {
                            "node": "DNS: format SPF probe results1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Wait": {
                "main": [
                    [
                        {
                            "node": "Get ID1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Get ID1": {
                "main": [
                    [
                        {
                            "node": "DNS: get MX probe results",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Connected providers output format": {
                "main": [
                    [
                        {
                            "node": "Merge sub-reports",
                            "type": "main",
                            "index": 2
                        }
                    ]
                ]
            },
            "Sanitize domain": {
                "main": [
                    [
                        {
                            "node": "Connected Providers trigger entry",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "VirusTotal entry point",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Hardenize entry point",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Shodan entry point",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Subdomain enum entry point",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Shodan": {
                "main": [
                    [
                        {
                            "node": "Remove unnecessary fields",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Connected Providers trigger entry": {
                "main": [
                    [
                        {
                            "node": "DNS: get SPF probe",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "DNS: get MX probe",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Check ApiLayer supported domain",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "VirusTotal Domain Analysis",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Shodan tmp entry": {
                "main": [
                    [
                        {
                            "node": "Shodan",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Check ApiLayer supported domain": {
                "main": [
                    [
                        {
                            "node": "Get DNS Registrar&Hosting (WHOIS)",
                            "type": "main",
                            "index": 0
                        }
                    ],
                    [
                        {
                            "node": "No WHOIS data found",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "No WHOIS data found": {
                "main": [
                    [
                        {
                            "node": "DNS: format Registrar&Hosting results",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Shodan report format": {
                "main": [
                    [
                        {
                            "node": "Merge sub-reports",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Create slides with SlidesGPT": {
                "main": [
                    [
                        {
                            "node": "Send slides url to Slack",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Sanitise markdown": {
                "main": [
                    [
                        {
                            "node": "Create slides with SlidesGPT",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "FlashDocs create slides",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "VirusTotal Domain Analysis": {
                "main": [
                    [
                        {
                            "node": "Parse VirusTotal response",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "FlashDocs create slides": {
                "main": [
                    [
                        {
                            "node": "Poll Slides creation status",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Poll Slides creation status": {
                "main": [
                    [
                        {
                            "node": "Switch",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Switch": {
                "main": [
                    [
                        {
                            "node": "Get slides link",
                            "type": "main",
                            "index": 0
                        }
                    ],
                    [
                        {
                            "node": "Wait for slides creation",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Wait for slides creation": {
                "main": [
                    [
                        {
                            "node": "Save task ID1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Get slides link": {
                "main": [
                    [
                        {
                            "node": "Send FlashDocs slides to Slack",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Save task ID1": {
                "main": [
                    [
                        {
                            "node": "Poll Slides creation status",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "TMP slides content": {
                "main": [
                    [
                        {
                            "node": "FlashDocs create slides",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Google Gemini Chat Model6": {
                "ai_languageModel": [
                    [
                        {
                            "node": "VirusTotal summary",
                            "type": "ai_languageModel",
                            "index": 0
                        }
                    ]
                ]
            },
            "VirusTotal summary": {
                "main": [
                    [
                        {
                            "node": "VirusTotal output format",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "VirusTotal output format": {
                "main": [
                    [
                        {
                            "node": "Merge sub-reports",
                            "type": "main",
                            "index": 3
                        }
                    ]
                ]
            },
            "Create Hardenize Assessment": {
                "main": [
                    [
                        {
                            "node": "Get Hardenize assessment status",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Get Hardenize assessment status": {
                "main": [
                    [
                        {
                            "node": "If",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Manual Domain Set1": {
                "main": [
                    [
                        {
                            "node": "Subdomain enum entry point",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "If": {
                "main": [
                    [
                        {
                            "node": "Wait for Hardenize report finish",
                            "type": "main",
                            "index": 0
                        }
                    ],
                    [
                        {
                            "node": "Get Hardenize Report Card",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Wait for Hardenize report finish": {
                "main": [
                    [
                        {
                            "node": "Get Hardenize assessment status",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Get Hardenize Report Card": {
                "main": [
                    [
                        {
                            "node": "Format report card",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "On form submission": {
                "main": [
                    [
                        {
                            "node": "Parse input form",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Parse input form": {
                "main": [
                    [
                        {
                            "node": "Sanitize domain",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Send start message",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Format report card": {
                "main": [
                    [
                        {
                            "node": "Summarize Hardenize",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "VirusTotal entry point": {
                "main": [
                    [
                        {
                            "node": "VirusTotal Domain Analysis",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Hardenize entry point": {
                "main": [
                    [
                        {
                            "node": "Create Hardenize Assessment",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Shodan entry point": {
                "main": [
                    [
                        {
                            "node": "Shodan",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Send slides url to Slack": {
                "main": [
                    []
                ]
            },
            "test data": {
                "main": [
                    [
                        {
                            "node": "Convert to File",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Convert to File": {
                "main": [
                    [
                        {
                            "node": "Execute Command",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Read/Write Files from Disk",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Execute Command": {
                "main": [
                    []
                ]
            },
            "Subdomain enum entry point": {
                "main": [
                    [
                        {
                            "node": "Enum subdomains",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Enum subdomains": {
                "main": [
                    [
                        {
                            "node": "Format subdomains list",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Loop Over Items",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Format subdomains list": {
                "main": [
                    [
                        {
                            "node": "Merge sub-reports",
                            "type": "main",
                            "index": 4
                        }
                    ]
                ]
            },
            "Save slides content entrypoint": {
                "main": [
                    [
                        {
                            "node": "SAve to nas2??1",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Post to slack??1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Save reports entrypoint": {
                "main": [
                    [
                        {
                            "node": "SAve to nas2??",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Post to slack??",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Convert to File1": {
                "main": [
                    [
                        {
                            "node": "Save reports to disk",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Convert to File2": {
                "main": [
                    [
                        {
                            "node": "Save slides content to disk",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Create output directory": {
                "main": [
                    [
                        {
                            "node": "Save reports entrypoint",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Slides content production1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Set output dir path": {
                "main": [
                    [
                        {
                            "node": "Create output directory",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Merge sub-reports": {
                "main": [
                    [
                        {
                            "node": "Set output dir path",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Generate Gemini Canvas prompt": {
                "main": [
                    [
                        {
                            "node": "SAve to nas2??2",
                            "type": "main",
                            "index": 0
                        },
                        {
                            "node": "Post to slack??2",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Convert Gemini Canvas prompt to File": {
                "main": [
                    [
                        {
                            "node": "Save slides content to disk1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "SAve to nas2??": {
                "main": [
                    [
                        {
                            "node": "Convert to File1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Post to slack??": {
                "main": [
                    [
                        {
                            "node": "Send reports to Slack",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "SAve to nas2??1": {
                "main": [
                    [
                        {
                            "node": "Convert to File2",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "SAve to nas2??2": {
                "main": [
                    [
                        {
                            "node": "Convert Gemini Canvas prompt to File",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Post to slack??1": {
                "main": [
                    [
                        {
                            "node": "Send slides content to Slack",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Post to slack??2": {
                "main": [
                    [
                        {
                            "node": "Send slides content to Slack1",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Parse VirusTotal response": {
                "main": [
                    [
                        {
                            "node": "VirusTotal summary",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Loop Over Items": {
                "main": [
                    [],
                    []
                ]
            }
        },
        "settings": {
            "executionOrder": "v1",
            "saveExecutionProgress": true,
            "callerPolicy": "workflowsFromSameOwner"
        },
        "staticData": null,
        "meta": {
            "templateCredsSetupCompleted": true
        },
        "pinData": {},
        "versionId": "08fa46eb-7498-4b1f-b019-2f2769bd1e37",
        "triggerCount": 2,
        "tags": []
    }
]